<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>夏军谊的小站</title>
    <link>https://www.xiajunyi.com/</link>
    <atom:link href="/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sat, 30 Apr 2022 11:28:32 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>使用Kibana制作上海疫情看板</title>
      <link>https://www.xiajunyi.com/pages/p87.html</link>
      <guid>https://www.xiajunyi.com/pages/p87.html</guid>
      <pubDate>Sat, 30 Apr 2022 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;​    &lt;img src=&quot;/img/xjy/p87000.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;现在因上海疫情困在房子里哪也去不了，非常无聊！于是突发其想，要不利用之前搭建好的ELK，搞一个上海3月以来疫情感染数的看板？OK，那就想办法实现吧！
      
      </description>
      
      <content:encoded><![CDATA[<p>​    <img src="/img/xjy/p87000.png" alt="img"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>现在因上海疫情困在房子里哪也去不了，非常无聊！于是突发其想，要不利用之前搭建好的ELK，搞一个上海3月以来疫情感染数的看板？OK，那就想办法实现吧！<a id="more"></a></p><p>先上一下最终效果，勾起一下兴趣：</p><p><img src="/img/xjy/p87005.png" alt="img"></p><h2 id="初使数据来源"><a href="#初使数据来源" class="headerlink" title="初使数据来源"></a>初使数据来源</h2><p>我最初的数据来源是一张别人整理过的表格，不幸的是，它只是一张图片。</p><p><img src="/img/xjy/p87001.png" alt="img"></p><h3 id="转换图片为表格"><a href="#转换图片为表格" class="headerlink" title="转换图片为表格"></a>转换图片为表格</h3><p>这里借用了一下微信的搜一搜功能使用腾讯文档进行转换：</p><ul><li><p>用微信打开原始数据图片</p></li><li><p>然后长按图片，点击底部的「搜一搜」按钮，此时，表格正在识别中。</p></li><li><p>识别好以后就可以去把图片导出excel格式了</p><p><img src="/img/xjy/p87002.png" alt="img"></p></li></ul><h3 id="导入数据到ES"><a href="#导入数据到ES" class="headerlink" title="导入数据到ES"></a>导入数据到ES</h3><h4 id="在ES中新建索引"><a href="#在ES中新建索引" class="headerlink" title="在ES中新建索引"></a>在ES中新建索引</h4><p>新建了一个如下结构的index：xinguan-sh</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"mapping"</span>: &#123;</span><br><span class="line">    <span class="attr">"properties"</span>: &#123;</span><br><span class="line">      <span class="attr">"date"</span>: &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"date"</span>,</span><br><span class="line">        <span class="attr">"format"</span>: <span class="string">"yyyy-MM-dd"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"id"</span>: &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"date"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"newadd"</span>: &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"long"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"properties"</span>: &#123;</span><br><span class="line">          <span class="attr">"match_all"</span>: &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"object"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"quezhen"</span>: &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"long"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"sum"</span>: &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"long"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"toquezhen"</span>: &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"long"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"wuzhengzhuang"</span>: &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"long"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用kibana的机器学习功能导入表格数据"><a href="#使用kibana的机器学习功能导入表格数据" class="headerlink" title="使用kibana的机器学习功能导入表格数据"></a>使用kibana的机器学习功能导入表格数据</h4><p>目前该功能还在实验阶段，支持的格式有限，所以记得把excel表格另存为csv格式的。如下步骤导入即可：</p><ul><li><p>kibana中选择如下入口上传csv文件</p><p><img src="/img/xjy/p87003.png" alt="img"></p></li><li><p>编辑每一列对应的字段属性</p></li><li>选择index名称xinguan-sh后进行导入</li></ul><h2 id="每日数据更新"><a href="#每日数据更新" class="headerlink" title="每日数据更新"></a>每日数据更新</h2><p>由于疫情数据每天都会由上海发布公众号进行更新，因此，需要每天更新一条ES的记录。</p><h3 id="计算公式"><a href="#计算公式" class="headerlink" title="计算公式"></a>计算公式</h3><p>确诊数、无症状数、无症状转归确诊数可以直接录入，然而有另外两项值来源于计算所得：</p><ul><li>新增人数 = 确诊数 + 无症状数 - 无症状转归确诊数</li><li>累积数 = 前一天累积数 + 今日新增数</li></ul><h3 id="SpringBoot项目主要代码"><a href="#SpringBoot项目主要代码" class="headerlink" title="SpringBoot项目主要代码"></a>SpringBoot项目主要代码</h3><p>对于上面这些公式，使用手算或者计算器都还是太麻烦，于是想着还是简单写个接口让程序自己算吧。</p><ul><li><p>引入maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置application.yml参数</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  elasticsearch:</span></span><br><span class="line"><span class="attr">    rest:</span></span><br><span class="line"><span class="attr">      uris:</span> <span class="attr">http://es-host:9200</span></span><br><span class="line"><span class="attr">      password:</span> <span class="string">密码不展示</span></span><br><span class="line"><span class="attr">      username:</span> <span class="string">用户名</span></span><br></pre></td></tr></table></figure></li><li><p>实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Document</span>(indexName = <span class="string">"xinguan-sh"</span>)</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XinGuanSH</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String quezhen;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String toquezhen;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String wuzhengzhuang;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String newadd;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String sum;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Field</span>(type = FieldType.Text)</span><br><span class="line">    <span class="keyword">private</span> String date;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Repository类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">XinGuanSHRepository</span> <span class="keyword">extends</span> <span class="title">ElasticsearchRepository</span>&lt;<span class="title">XinGuanSH</span>, <span class="title">String</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Service实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XinGuanSHSeviceImpl</span> <span class="keyword">implements</span> <span class="title">XinGuanSHService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> XinGuanSH xinGuanSHRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(XinGuanSH xinGuanSH)</span> </span>&#123;</span><br><span class="line">        String dateStr = xinGuanSH.getDate();</span><br><span class="line">        Integer quezhen = Integer.valueOf(xinGuanSH.getQuezhen());</span><br><span class="line">        Integer wuzhengzhuang = Integer.valueOf(xinGuanSH.getWuzhengzhuang());</span><br><span class="line">        Integer toquezhen = Integer.valueOf(xinGuanSH.getToquezhen());</span><br><span class="line">        <span class="comment">// 计算新增数</span></span><br><span class="line">        Integer newadd = quezhen + wuzhengzhuang - toquezhen;</span><br><span class="line">        String lastDate = lastDate(dateStr);</span><br><span class="line">        XinGuanSH lastDoc = xinGuanSHRepository.findById(lastDate).get();</span><br><span class="line">        <span class="comment">// 计算累积数</span></span><br><span class="line">        Integer sum = newadd + Integer.valueOf(lastDoc.getSum());</span><br><span class="line">        <span class="comment">// 组装新doc记录</span></span><br><span class="line">        XinGuanSH doc = <span class="keyword">new</span> XinGuanSH();</span><br><span class="line">        doc.setId(dateStr);</span><br><span class="line">        doc.setDate(dateStr);</span><br><span class="line">        doc.setQuezhen(quezhen.toString());</span><br><span class="line">        doc.setToquezhen(toquezhen.toString());</span><br><span class="line">        doc.setWuzhengzhuang(wuzhengzhuang.toString());</span><br><span class="line">        doc.setNewadd(newadd.toString());</span><br><span class="line">        doc.setSum(sum.toString());</span><br><span class="line">        xinGuanSHRepository.save(doc);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取上一天</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dateStr</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">lastDate</span><span class="params">(String dateStr)</span></span>&#123;</span><br><span class="line">        SimpleDateFormat sf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Date date = sf.parse(dateStr);</span><br><span class="line">            Date lastDate = DateUtil.offsetDay(date, -<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> sf.format(lastDate);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Controller类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/xxx"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EsController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> XinGuanSHService xinGuanSHService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/save"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> JSONObject <span class="title">save</span><span class="params">(@RequestBody XinGuanSH xinGuanSH)</span> </span>&#123;</span><br><span class="line">        xinGuanSHService.save(xinGuanSH);</span><br><span class="line">        <span class="keyword">return</span>  CommonUtil.successJson();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="每日调用接口更新数据"><a href="#每日调用接口更新数据" class="headerlink" title="每日调用接口更新数据"></a>每日调用接口更新数据</h3><p>每天只需根据新闻发布的几项数值，调用一下接口就行</p><p>​    <img src="/img/xjy/p87004.png" alt="img"></p><h2 id="Kibana看板设计"><a href="#Kibana看板设计" class="headerlink" title="Kibana看板设计"></a>Kibana看板设计</h2><p>这一项其实都是一些界面配置，没有什么好说的，各种图表配置参考官方文档中的介绍即可，大致步骤如下：</p><ul><li><p>新建kibana索引模式:xinguan-sh</p></li><li><p>新增各项可视化组件，并编辑组件展示项对应于kibana索引模式xinguan-sh中的属性等</p></li><li><p>如果有特殊要显示的计算值或拼装值，可结合定义kibana索引模式中的脚本字段来实现。</p><blockquote><p>比如我想显示单位为万的换算值，于是我可以定义1个叫做wuzhengzhuang-w的脚本字段，给其填入如下脚本：</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def a = doc[<span class="string">'wuzhengzhuang'</span>].value;</span><br><span class="line"><span class="keyword">return</span> a/<span class="number">10000.00</span>;</span><br></pre></td></tr></table></figure></li><li><p>可视化组件编辑完成后，再新建仪表板，选择上面的一些组件，进行拖拽放置在页面中的不同位置即可。</p></li></ul><p>最终效果就是文章开头那样啦！</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>利用kibana可以实现的看板效果还有很多，或者也可以用Canvas做一些绚丽的页面。目前本人只是简单的尝试了一下几个组件的效果，从图中趋势看，上海近几日疫情已经稳步好转，希望早日解封吧！</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p87.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>X-Pack破解实验及Elk集成Ldap</title>
      <link>https://www.xiajunyi.com/pages/p86.html</link>
      <guid>https://www.xiajunyi.com/pages/p86.html</guid>
      <pubDate>Tue, 29 Mar 2022 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;​    &lt;img src=&quot;/img/xjy/p86000.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;本文旨在记录一次ELK7.1.0为例的X-Pack插件破解实验，以及ELK和ldap的集成，文中方法均来自互联网，&lt;strong&gt;本人仅做研究学习，不做商用，特此申明&lt;/strong&gt;！
      
      </description>
      
      <content:encoded><![CDATA[<p>​    <img src="/img/xjy/p86000.png" alt="img"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本文旨在记录一次ELK7.1.0为例的X-Pack插件破解实验，以及ELK和ldap的集成，文中方法均来自互联网，<strong>本人仅做研究学习，不做商用，特此申明</strong>！<a id="more"></a></p><blockquote><p>参考文档链接：</p><ul><li><a href="https://www.cco.xyz/archives/811" target="_blank" rel="noopener">x-pack破解</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.3/configuring-ldap-realm.html" target="_blank" rel="noopener">ldap集成</a></li></ul></blockquote><h2 id="反编译破解x-pack"><a href="#反编译破解x-pack" class="headerlink" title="反编译破解x-pack"></a>反编译破解x-pack</h2><h3 id="查找自己版本的jar包"><a href="#查找自己版本的jar包" class="headerlink" title="查找自己版本的jar包"></a>查找自己版本的jar包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /usr/share/elasticsearch/modules | grep x-pack-core</span><br></pre></td></tr></table></figure><h3 id="取出jar包"><a href="#取出jar包" class="headerlink" title="取出jar包"></a>取出jar包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /usr/share/elasticsearch/modules/x-pack-core/x-pack-core-7.1.0.jar</span><br></pre></td></tr></table></figure><h3 id="反编译并重新打jar包"><a href="#反编译并重新打jar包" class="headerlink" title="反编译并重新打jar包"></a>反编译并重新打jar包</h3><p>我们需要把2个文件提取出来进行修改。<code>org.elasticsearch.license.LicenseVerifier</code>和<code>org.elasticsearch.xpack.core.XPackBuild</code></p><ul><li><p>修改LicenseVerifier.java</p><p><code>LicenseVerifier</code>中有两个静态方法，这就是验证授权文件是否有效的方法，我们把它修改为全部返回true.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.elasticsearch.license;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.*;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.bytes.*;</span><br><span class="line"><span class="keyword">import</span> java.security.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.xcontent.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.util.*;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.core.internal.io.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LicenseVerifier</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">verifyLicense</span><span class="params">(<span class="keyword">final</span> License license, <span class="keyword">final</span> <span class="keyword">byte</span>[] publicKeyData)</span> </span>&#123;</span><br><span class="line"><span class="comment">/*        byte[] signedContent = null;</span></span><br><span class="line"><span class="comment">        byte[] publicKeyFingerprint = null;</span></span><br><span class="line"><span class="comment">        try &#123;</span></span><br><span class="line"><span class="comment">            final byte[] signatureBytes = Base64.getDecoder().decode(license.signature());</span></span><br><span class="line"><span class="comment">            final ByteBuffer byteBuffer = ByteBuffer.wrap(signatureBytes);</span></span><br><span class="line"><span class="comment">            final int version = byteBuffer.getInt();</span></span><br><span class="line"><span class="comment">            final int magicLen = byteBuffer.getInt();</span></span><br><span class="line"><span class="comment">            final byte[] magic = new byte[magicLen];</span></span><br><span class="line"><span class="comment">            byteBuffer.get(magic);</span></span><br><span class="line"><span class="comment">            final int hashLen = byteBuffer.getInt();</span></span><br><span class="line"><span class="comment">            publicKeyFingerprint = new byte[hashLen];</span></span><br><span class="line"><span class="comment">            byteBuffer.get(publicKeyFingerprint);</span></span><br><span class="line"><span class="comment">            final int signedContentLen = byteBuffer.getInt();</span></span><br><span class="line"><span class="comment">            signedContent = new byte[signedContentLen];</span></span><br><span class="line"><span class="comment">            byteBuffer.get(signedContent);</span></span><br><span class="line"><span class="comment">            final XContentBuilder contentBuilder = XContentFactory.contentBuilder(XContentType.JSON);</span></span><br><span class="line"><span class="comment">            license.toXContent(contentBuilder, (ToXContent.Params)new ToXContent.MapParams((Map)Collections.singletonMap("license_spec_view", "true")));</span></span><br><span class="line"><span class="comment">            final Signature rsa = Signature.getInstance("SHA512withRSA");</span></span><br><span class="line"><span class="comment">            rsa.initVerify(CryptUtils.readPublicKey(publicKeyData));</span></span><br><span class="line"><span class="comment">            final BytesRefIterator iterator = BytesReference.bytes(contentBuilder).iterator();</span></span><br><span class="line"><span class="comment">            BytesRef ref;</span></span><br><span class="line"><span class="comment">            while ((ref = iterator.next()) != null) &#123;</span></span><br><span class="line"><span class="comment">                rsa.update(ref.bytes, ref.offset, ref.length);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            return rsa.verify(signedContent);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        catch (IOException ex) &#123;&#125;</span></span><br><span class="line"><span class="comment">        catch (NoSuchAlgorithmException ex2) &#123;&#125;</span></span><br><span class="line"><span class="comment">        catch (SignatureException ex3) &#123;&#125;</span></span><br><span class="line"><span class="comment">        catch (InvalidKeyException e) &#123;</span></span><br><span class="line"><span class="comment">            throw new IllegalStateException(e);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        finally &#123;</span></span><br><span class="line"><span class="comment">            if (signedContent != null) &#123;</span></span><br><span class="line"><span class="comment">                Arrays.fill(signedContent, (byte)0);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">verifyLicense</span><span class="params">(<span class="keyword">final</span> License license)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        byte[] publicKeyBytes;</span></span><br><span class="line"><span class="comment">        try &#123;</span></span><br><span class="line"><span class="comment">            final InputStream is = LicenseVerifier.class.getResourceAsStream("/public.key");</span></span><br><span class="line"><span class="comment">            try &#123;</span></span><br><span class="line"><span class="comment">                final ByteArrayOutputStream out = new ByteArrayOutputStream();</span></span><br><span class="line"><span class="comment">                Streams.copy(is, (OutputStream)out);</span></span><br><span class="line"><span class="comment">                publicKeyBytes = out.toByteArray();</span></span><br><span class="line"><span class="comment">                if (is != null) &#123;</span></span><br><span class="line"><span class="comment">                    is.close();</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            catch (Throwable t) &#123;</span></span><br><span class="line"><span class="comment">                if (is != null) &#123;</span></span><br><span class="line"><span class="comment">                    try &#123;</span></span><br><span class="line"><span class="comment">                        is.close();</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                    catch (Throwable t2) &#123;</span></span><br><span class="line"><span class="comment">                        t.addSuppressed(t2);</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                throw t;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        catch (IOException ex) &#123;</span></span><br><span class="line"><span class="comment">            throw new IllegalStateException(ex);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        //return verifyLicense(license, publicKeyBytes);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改XPackBuild.java</p><p><code>XPackBuild</code>中最后一个静态代码块中 try的部分全部删除，这部分会验证jar包是否被修改.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.elasticsearch.xpack.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.jar.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XPackBuild</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> XPackBuild CURRENT;</span><br><span class="line">    <span class="keyword">private</span> String shortHash;</span><br><span class="line">    <span class="keyword">private</span> String date;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressForbidden</span>(reason = <span class="string">"looks up path of xpack.jar directly"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">static</span> Path <span class="title">getElasticsearchCodebase</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> URL url = XPackBuild.class.getProtectionDomain().getCodeSource().getLocation();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> PathUtils.get(url.toURI());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (URISyntaxException bogus) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(bogus);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    XPackBuild(<span class="keyword">final</span> String shortHash, <span class="keyword">final</span> String date) &#123;</span><br><span class="line">        <span class="keyword">this</span>.shortHash = shortHash;</span><br><span class="line">        <span class="keyword">this</span>.date = date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">shortHash</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.shortHash;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">date</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> Path path = getElasticsearchCodebase();</span><br><span class="line">        String shortHash = <span class="keyword">null</span>;</span><br><span class="line">        String date = <span class="keyword">null</span>;</span><br><span class="line">        Label_0109: &#123;</span><br><span class="line"><span class="comment">/*            if (path.toString().endsWith(".jar")) &#123;</span></span><br><span class="line"><span class="comment">                try &#123;</span></span><br><span class="line"><span class="comment">                    final JarInputStream jar = new JarInputStream(Files.newInputStream(path, new OpenOption[0]));</span></span><br><span class="line"><span class="comment">                    try &#123;</span></span><br><span class="line"><span class="comment">                        final Manifest manifest = jar.getManifest();</span></span><br><span class="line"><span class="comment">                        shortHash = manifest.getMainAttributes().getValue("Change");</span></span><br><span class="line"><span class="comment">                        date = manifest.getMainAttributes().getValue("Build-Date");</span></span><br><span class="line"><span class="comment">                        jar.close();</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                    catch (Throwable t) &#123;</span></span><br><span class="line"><span class="comment">                        try &#123;</span></span><br><span class="line"><span class="comment">                            jar.close();</span></span><br><span class="line"><span class="comment">                        &#125;</span></span><br><span class="line"><span class="comment">                        catch (Throwable t2) &#123;</span></span><br><span class="line"><span class="comment">                            t.addSuppressed(t2);</span></span><br><span class="line"><span class="comment">                        &#125;</span></span><br><span class="line"><span class="comment">                        throw t;</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                    break Label_0109;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                catch (IOException e) &#123;</span></span><br><span class="line"><span class="comment">                    throw new RuntimeException(e);</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">            shortHash = <span class="string">"Unknown"</span>;</span><br><span class="line">            date = <span class="string">"Unknown"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        CURRENT = <span class="keyword">new</span> XPackBuild(shortHash, date);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>生成.class文件</p><p>上述<code>LicenseVerifier.java</code>和<code>XPackBuild.java</code>两个文件在本地电脑windows修改完成后，我们需要将其复制到elasticsearch服务器上并编译成class文件，然后打包到x-pack-core-7.1.0.jar中。我们这里将这2个文件放到了/opt目录下。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 编译LicenseVerifier.java</span><br><span class="line"> $ javac -cp <span class="string">"/usr/share/elasticsearch/lib/elasticsearch-7.1.0.jar:/usr/share/elasticsearch/lib/lucene-core-8.0.0.jar:/usr/share/elasticsearch/modules/x-pack-core/x-pack-core-7.1.0.jar:/usr/share/elasticsearch/modules/x-pack-core/netty-common-4.1.32.Final.jar:/usr/share/elasticsearch/lib/elasticsearch-core-7.1.0.jar"</span> /opt/LicenseVerifier.java</span><br><span class="line"></span><br><span class="line"> # 编译XPackBuild.java</span><br><span class="line"> $ javac -cp <span class="string">"/usr/share/elasticsearch/lib/elasticsearch-7.1.0.jar:/usr/share/elasticsearch/lib/lucene-core-8.0.0.jar:/usr/share/elasticsearch/modules/x-pack-core/x-pack-core-7.1.0.jar:/usr/share/elasticsearch/modules/x-pack-core/netty-common-4.1.32.Final.jar:/usr/share/elasticsearch/lib/elasticsearch-core-7.1.0.jar:"</span> /opt/XPackBuild.java</span><br><span class="line"></span><br><span class="line"> # 查看编译后的文件</span><br><span class="line"> $ ls /opt | grep .class</span><br><span class="line"> LicenseVerifier.class</span><br><span class="line"> XPackBuild.class</span><br></pre></td></tr></table></figure></li><li><p>替换LicenseVerifier.class和XPackBuild.class</p><p>我们把/usr/share/elasticsearch<code>/modules/x-pack-core</code>目录下的<code>x-pack-core-7.1.0.jar</code>提取出来，放到一个临时的<code>/elk/x-pack</code>目录中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cp /usr/share/elasticsearch/modules/x-pack-core/x-pack-core-7.12.0.jar /opt/x</span><br><span class="line">$ cd /opt/x</span><br><span class="line"># 解压x-pack-core-7.1.0.jar</span><br><span class="line">$ jar -xvf x-pack-core-7.1.0.jar</span><br><span class="line">  </span><br><span class="line"># 替换.class文件</span><br><span class="line">$ cp /opt/XPackBuild.class /opt/x-pack-core-7.1.0/org/elasticsearch/xpack/core/</span><br><span class="line">$ cp /opt/LicenseVerifier.class /opt/x-pack-core-7.1.0/org/elasticsearch/license/</span><br></pre></td></tr></table></figure></li><li><p>打包新x-pack-core-7.1.0.jar文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd /opt/x</span><br><span class="line">$ rm -rf x-pack-core-7.1.0.jar   # 删除临时拷贝过来的源文件</span><br><span class="line">$ jar cvf x-pack-core-7.1.0.jar .   #“.”表示全选文件</span><br></pre></td></tr></table></figure><p>至此在/elk/x-pack目录下会新生成一个<code>x-pack-core-7.1.0.jar</code>文件。也就是破解后的文件。</p></li><li><p>替换x-pack-core-7.1.0.jar文件</p><p>我们将新生成的x-pack-core-7.1.0.jar文件文件替换掉源x-pack-core-7.1.0.jar文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /opt/x-pack-core-7.1.0/x-pack-core-7.1.0.jar /usr/share/elasticsearch/modules/x-pack-core/</span><br><span class="line"> rm -rf /elk/x-pack  # 完成文件替换后该目录既可以删除了</span><br></pre></td></tr></table></figure></li></ul><h2 id="激活License"><a href="#激活License" class="headerlink" title="激活License"></a>激活License</h2><h3 id="申请License"><a href="#申请License" class="headerlink" title="申请License"></a>申请License</h3><p>完成以上步骤后，需要去elastic官网申请一个license, <a href="https://license.elastic.co/registration" target="_blank" rel="noopener">License申请地址</a>，申请个一年的免费license，申请完成后会发送文件到你的邮箱中，打开后：<br><img src="/img/xjy/p86001.png" alt="img"><br>点击<code>Download the license for Elasticsearch 5.x/6.x</code>，</p><h3 id="编辑License"><a href="#编辑License" class="headerlink" title="编辑License"></a>编辑License</h3><p>下载后打开这个文件，并将该License的<code>type</code>、<code>expiry_date_in_millis</code>、<code>max_nodes</code>分别修改成<code>platinum</code>、<code>2524579200999</code>、<code>1000</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;license&quot;: &#123;</span><br><span class="line">    &quot;uid&quot;: &quot;c3f3df93-4636-45af-aafa-65d982dcabcd&quot;,</span><br><span class="line">    &quot;type&quot;: &quot;platinum&quot;, //修改这里</span><br><span class="line">    &quot;issue_date_in_millis&quot;: 1594598400000,</span><br><span class="line">    &quot;expiry_date_in_millis&quot;: 2524579200999, //修改这里</span><br><span class="line">    &quot;max_nodes&quot;: 100,</span><br><span class="line">    &quot;issued_to&quot;: &quot;Yun Ma (alibaba)&quot;,</span><br><span class="line">    &quot;issuer&quot;: &quot;Web Form&quot;,</span><br><span class="line">    &quot;signature&quot;: &quot;AAAAAwAAAA2OlDvwgEit+SgvmIMdAAABmC9ZN0hjZDBGYnVyRXpCOW5Bb3FjZDAxOWpSbTVoMVZwUzRxVk1PSmkxaktJRVl5MUYvUWh3bHZVUTllbXNPbzBUemtnbWpBbmlWRmRZb25KNFlBR2x0TXc2K2p1Y1VtMG1UQU9TRGZVSGRwaEJGUjE3bXd3LzRqZ05iLzRteWFNekdxRGpIYlFwYkJdadadvcvTVlJKNVlXekMrSlVUdFIvV0FNeWdOYnlESDc3MWhlY3hSQmdKSjJ2ZTcvYlBFOHhPQlV3ZHdDQ0tHcG5uOElCaDJ4K1hob29xSG85N0kvTWV3THhlQk9NL01VMFRjNDZpZEVXeUtUMXIyMlIveFpJUkk2WUdveEZaME9XWitGUi9WNTZVQW1FMG1DenhZU0ZmeXlZakVEMjZFT2NvOWxpZGlqVmlHNC8rWVVUYzMwRGVySHpIdURzKzFiRDl4TmM1TUp2VTBOUlJZUlAyV0ZVL2kvVk10L0NsbXNFYVZwT3NSU082dFNNa2prQ0ZsclZ4NTltbU1CVE5lR09Bck93V2J1Y3c9PQAAAQAiHgOdr6bXoO1mENpZuipAKKjoMyW2cAT0DD8FQ2fotYibJO2rK4JX4e4Ce4yO/g5lv6/DgNt95qN2m9c2NpZlv3Qu0wg3lovrnAzstX3IddpnIvoDOIOTDULFLBNL5+jENUVZ+OtKewXUqldPKQWA4v2a4UjQ8TKV6dwxYNMz55Ml8y0XU9mK/DoRCsXUwDFsOdR+bUHOZsTMA1EUgosIykxo5L8E7bYgMIuW8IirRB50DmtzUxCe5eX+SoarOIHVKQica/YHXETD0dzGRhHR7AOm3AMoHnXcg652dNvKVbyiaSXLaTwy2NuHKxmRR9L/fcPgA/xf2+pCXzTMfgjm&quot;,</span><br><span class="line">    &quot;start_date_in_millis&quot;: 1594598400000</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="传入License"><a href="#传入License" class="headerlink" title="传入License"></a>传入License</h3><p>再将这个License的json文件通过<code>kibana</code>上传上去即可。<br><img src="/img/xjy/p86002.png" alt="img"></p><h3 id="开启x-pack安全认证"><a href="#开启x-pack安全认证" class="headerlink" title="开启x-pack安全认证"></a>开启x-pack安全认证</h3><p>在config/elasticsearch.yml中配置x-pack安全认证</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">xpack.security.transport.ssl.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">xpack.security.enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="string">http.cors.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">http.cors.allow-origin:</span> <span class="string">"*"</span></span><br><span class="line"><span class="string">http.cors.allow-headers:</span> <span class="string">"Authorization"</span></span><br></pre></td></tr></table></figure><h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><p>交互设置密码(建议都设置成同一个方便记忆)：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/elasticsearch-setup-passwords interactive</span><br></pre></td></tr></table></figure><h2 id="集成ldap"><a href="#集成ldap" class="headerlink" title="集成ldap"></a>集成ldap</h2><ul><li><p>在config/elasticsearch.yml中配置ldap</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">xpack.security.authc.realms.ldap.ldap1.order:</span> <span class="number">0</span></span><br><span class="line"><span class="string">xpack.security.authc.realms.ldap.ldap1.url:</span> <span class="string">"ldap://xxx-openldap:389"</span></span><br><span class="line"><span class="string">xpack.security.authc.realms.ldap.ldap1.bind_dn:</span> <span class="string">"cn=admin,dc=xxx,dc=com"</span></span><br><span class="line"><span class="string">xpack.security.authc.realms.ldap.ldap1.bind_password:</span> <span class="string">"xxxxxx"</span></span><br><span class="line"><span class="string">xpack.security.authc.realms.ldap.ldap1.user_search.base_dn:</span> <span class="string">"ou=elk,dc=xxx,dc=com"</span></span><br><span class="line"><span class="string">xpack.security.authc.realms.ldap.ldap1.user_search.filter:</span> <span class="string">"(cn=&#123;0&#125;)"</span></span><br><span class="line"><span class="string">xpack.security.authc.realms.ldap.ldap1.group_search.base_dn:</span> <span class="string">"ou=elk,dc=xxx,dc=com"</span></span><br><span class="line"><span class="string">xpack.security.authc.realms.ldap.ldap1.unmapped_groups_as_roles:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>使用kibana新建个测试的角色test-role</p></li><li><p>给ldap用户组绑定角色，去kibana的devTools里执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST "localhost:9200/_xpack/security/role_mapping/users" -u elastic:密码 -H 'Content-Type: application/json' -d'</span><br><span class="line">&#123;</span><br><span class="line">  "roles": [ "test-role" ],</span><br><span class="line">  "enabled": true,</span><br><span class="line">  "rules": &#123;</span><br><span class="line">    "field" : &#123; "dn" : "*,ou=elk,dc=xxx,dc=com" &#125;              </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>查看角色绑定关系</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl "localhost:9200/_xpack/security/role_mapping?pretty" -u elastic:密码</span><br></pre></td></tr></table></figure></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>本文所有内容仅供个人学习，请勿用于商业用途，谢谢！</strong></p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p86.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Docker-Compose配置（五）搭建KooTeam在线团队协作系统</title>
      <link>https://www.xiajunyi.com/pages/p85.html</link>
      <guid>https://www.xiajunyi.com/pages/p85.html</guid>
      <pubDate>Tue, 01 Mar 2022 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;​    &lt;a href=&quot;https://mp.weixin.qq.com/s/JBhcA9hSWX4mD0SqBolVIQ&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;/img/xjy/p85000.png&quot; alt=&quot;img&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;kooteam是一款轻量级的在线团队协作工具，提供各类文档工具、在线思维导图、在线流程图、项目管理、任务分发，知识库管理等工具。
      
      </description>
      
      <content:encoded><![CDATA[<p>​    <a href="https://mp.weixin.qq.com/s/JBhcA9hSWX4mD0SqBolVIQ" target="_blank" rel="noopener"><img src="/img/xjy/p85000.png" alt="img"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>kooteam是一款轻量级的在线团队协作工具，提供各类文档工具、在线思维导图、在线流程图、项目管理、任务分发，知识库管理等工具。<a id="more"></a></p><p>待办四象限：突出事情优先级，帮助员工合理安排时间，提高工作效率。</p><p>项目管理：自定义项目看板，可视化任务安排。</p><p>在线知识库：在线流程图，在线文档，以及可视化的目录编排，文档管理无忧。</p><p>日程管理：可视化日程管理，快速搞定工作计划，了解工作宏观安排。</p><p>下面使用docker-compose动手实战搭建一下吧！</p><h2 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h2><h3 id="编写dockerfile"><a href="#编写dockerfile" class="headerlink" title="编写dockerfile"></a>编写dockerfile</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">FROM</span> <span class="attr">openjdk:8</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">curl</span> <span class="bullet">-L</span> <span class="bullet">-o</span> <span class="string">kooteam.tar.gz</span> <span class="string">'https://www.kooteam.com/home/download.do?app=kooteam&amp;type=install'</span> <span class="string">\</span></span><br><span class="line"><span class="string">&amp;&amp;</span> <span class="string">tar</span> <span class="bullet">-xvf</span> <span class="string">kooteam.tar.gz</span></span><br><span class="line"><span class="string">WORKDIR</span> <span class="string">/</span></span><br><span class="line"><span class="string">EXPOSE</span> <span class="number">7053</span></span><br><span class="line"><span class="string">CMD</span> <span class="string">["java","-jar","./kooteam.jar"]</span></span><br></pre></td></tr></table></figure><h3 id="打成镜像"><a href="#打成镜像" class="headerlink" title="打成镜像"></a>打成镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t kooteam:2.0 .</span><br></pre></td></tr></table></figure><h2 id="发布容器"><a href="#发布容器" class="headerlink" title="发布容器"></a>发布容器</h2><h3 id="docker-compose配置"><a href="#docker-compose配置" class="headerlink" title="docker-compose配置"></a>docker-compose配置</h3><p>xjy-kooteam.yml:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">    xjy-kooteam:</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">kooteam:2.0</span></span><br><span class="line"><span class="attr">        container_name:</span> <span class="string">xjy-kooteam</span></span><br><span class="line"><span class="attr">        restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="number">8082</span><span class="string">:7053</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">xjynet</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  xjynet:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="执行发布"><a href="#执行发布" class="headerlink" title="执行发布"></a>执行发布</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f xjy-kooteam.yml up -d</span><br></pre></td></tr></table></figure><h2 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h2><h3 id="初次访问配置数据库连接"><a href="#初次访问配置数据库连接" class="headerlink" title="初次访问配置数据库连接"></a>初次访问配置数据库连接</h3><p><img src="/img/xjy/p85001.png" alt="img"></p><h3 id="再次访问进入首页界面"><a href="#再次访问进入首页界面" class="headerlink" title="再次访问进入首页界面"></a>再次访问进入首页界面</h3><p><img src="/img/xjy/p85002.png" alt="img"></p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p85.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Docker-Compose配置（四）搭建Ldap系统</title>
      <link>https://www.xiajunyi.com/pages/p84.html</link>
      <guid>https://www.xiajunyi.com/pages/p84.html</guid>
      <pubDate>Tue, 08 Feb 2022 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/yTvjus6dawLTFQWnRmlhfg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;/img/xjy/p84000.png&quot; alt=&quot;img&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;LDAP协议的好处就是你公司的所有员工在所有这些工具里共享同一套用户名和密码，来人的时候新增一个用户就能自动访问所有系统，走人的时候一键删除就取消了他对所有系统的访问权限，这就是LDAP。当然各个系统都需要集成LDAP，这一次将介绍最简单的docker方式搭建LDAP系统。
      
      </description>
      
      <content:encoded><![CDATA[<p><a href="https://mp.weixin.qq.com/s/yTvjus6dawLTFQWnRmlhfg" target="_blank" rel="noopener"><img src="/img/xjy/p84000.png" alt="img"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>LDAP协议的好处就是你公司的所有员工在所有这些工具里共享同一套用户名和密码，来人的时候新增一个用户就能自动访问所有系统，走人的时候一键删除就取消了他对所有系统的访问权限，这就是LDAP。当然各个系统都需要集成LDAP，这一次将介绍最简单的docker方式搭建LDAP系统。<a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>• CentOs7</p><p> • Docker • Docker-compose</p><h2 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h2><h3 id="编写docker-compose脚本"><a href="#编写docker-compose脚本" class="headerlink" title="编写docker-compose脚本"></a>编写docker-compose脚本</h3><p>下面包含了两个容器：分别是openldap系统和用于管理员使用的web界面系统phpldapadmin：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  xjy-openldap:</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">xjy-openldap</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">osixia/openldap:latest</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      LDAP_ORGANISATION:</span> <span class="string">"xjy"</span></span><br><span class="line"><span class="attr">      LDAP_DOMAIN:</span> <span class="string">"xxx.com"</span></span><br><span class="line"><span class="attr">      LDAP_ADMIN_PASSWORD:</span> <span class="string">"密码不展示"</span></span><br><span class="line"><span class="attr">      LDAP_CONFIG_PASSWORD:</span> <span class="string">"密码不展示"</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./docker_ldap/xjy-openldap/data:/var/lib/ldap</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">./docker_ldap/xjy-openldap/config:/etc/ldap/slapd.d</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">'389:389'</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">xjynet</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  xjy-phpldapadmin:</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">xjy-phpldapadmin</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">osixia/phpldapadmin:latest</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="attr">      PHPLDAPADMIN_HTTPS:</span> <span class="string">"false"</span></span><br><span class="line"><span class="attr">      PHPLDAPADMIN_LDAP_HOSTS:</span> <span class="string">xjy-openldap</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">'3333:80'</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">xjynet</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">xjy-openldap</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  xjynet:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="运行docker-compose脚本"><a href="#运行docker-compose脚本" class="headerlink" title="运行docker-compose脚本"></a>运行docker-compose脚本</h3><p>  运行一下命令即可启动容器：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f xjy-ldap.yml up -d</span><br></pre></td></tr></table></figure><h2 id="phpldapadmin界面使用"><a href="#phpldapadmin界面使用" class="headerlink" title="phpldapadmin界面使用"></a>phpldapadmin界面使用</h2><h3 id="访问后点login登录"><a href="#访问后点login登录" class="headerlink" title="访问后点login登录"></a>访问后点login登录</h3><p><img src="/img/xjy/p84001.png" alt="img"></p><h3 id="简单配置"><a href="#简单配置" class="headerlink" title="简单配置"></a>简单配置</h3><p>分别按照如下选项建立自己的组织单位—-&gt;分组—-&gt;用户<br><img src="/img/xjy/p84002.png" alt="img"></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>在其他软件系统中对于ldap的集成只需把地址/端口/管理账号/密码信息等配置就行。下面以showdoc为例：<br><img src="/img/xjy/p84003.png" alt="img"></p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p84.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Arthus使用指南（转）</title>
      <link>https://www.xiajunyi.com/pages/p83.html</link>
      <guid>https://www.xiajunyi.com/pages/p83.html</guid>
      <pubDate>Tue, 11 Jan 2022 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p83000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4 id=&quot;转载来自：&quot;&gt;&lt;a href=&quot;#转载来自：&quot; class=&quot;headerlink&quot; title=&quot;* 转载来自：&quot;&gt;&lt;/a&gt;* 转载来自：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;作者：小马蛋&lt;br&gt;链接： &lt;a href=&quot;https://www.jianshu.com/p/95449939cca3&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《https://www.jianshu.com/p/95449939cca3》&lt;/a&gt;&lt;br&gt;来源：简书&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p83000.png" alt="img"><br></p><h4 id="转载来自："><a href="#转载来自：" class="headerlink" title="* 转载来自："></a>* 转载来自：</h4><blockquote><p>作者：小马蛋<br>链接： <a href="https://www.jianshu.com/p/95449939cca3" target="_blank" rel="noopener">《https://www.jianshu.com/p/95449939cca3》</a><br>来源：简书</p></blockquote><a id="more"></a><h4 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h4><p>Arthas 是Alibaba开源的Java诊断工具。安装在系统所在服务器。可以帮助开发人员或者运维人员查找问题，分析性能，bug追踪。</p><h4 id="二、解决什么问题-amp-适用场景"><a href="#二、解决什么问题-amp-适用场景" class="headerlink" title="二、解决什么问题 &amp; 适用场景"></a>二、解决什么问题 &amp; 适用场景</h4><p>解决问题：<br>1、以全局视角来查看系统的运行状况、健康状况。<br>2、反编译源码，查看jvm加载的是否为预期的文件内容。<br>3、查看某个方法的返回值，参数等等。<br>4、方法内调用路径及各方法调用耗时。<br>5、查看jvm运行状况。<br>6、外部.class文件重新加载到jvm里。<br>等等…..</p><p>场景：<br>1）调用接口时，接口返回异常信息，如果该异常信息没有清晰的定位到代码，那么我们通常只能依靠大脑回忆代码，来估计错误发生地了，如果无法估计，一般情况下就会进入测试环境，模拟复现，如果无法复现 _。<br>2）这个查询，耗时20s，我们想要分析一下到底是哪些代码导致的。但是该方法内部又穿插调用了其它业务功能方法，难道手写System.currentTimeMillis()自己做减运算，还是guava的StopWatch亦或是commons的StopWatch？这几种方式需要我们手动嵌入代码，容易遗漏、费力还费时。<br>等等，就不一一举例了。<br>arthas可以为我们解决上述问题，帮助程序员尽早下班，尽早交代。</p><h4 id="三、安装-amp-启动"><a href="#三、安装-amp-启动" class="headerlink" title="三、安装&amp;启动"></a>三、安装&amp;启动</h4><blockquote><p>下载: wget <a href="https://links.jianshu.com/go?to=https%3A%2F%2Falibaba.github.io%2Farthas%2Farthas-boot.jar" target="_blank" rel="noopener">https://alibaba.github.io/arthas/arthas-boot.jar</a></p><p>启动: java -jar arthas-boot.jar</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[INFO] arthas-boot version: 3.0.5.2</span><br><span class="line">[INFO] Process 6020 already using port 3658</span><br><span class="line">[INFO] Process 6020 already using port 8563</span><br><span class="line">[INFO] Found existing java process, please choose one and hit RETURN.</span><br><span class="line">*[1]: 6020 org.apache.catalina.startup.Bootstrap</span><br><span class="line">[2]: 16420 org.apache.catalina.startup.Bootstrap</span><br><span class="line">[3]: 7833 org.apache.catalina.startup.Bootstrap</span><br><span class="line">[4]: 19036 org.apache.catalina.startup.Bootstrap</span><br><span class="line"></span><br><span class="line">出现上述命令提示，是因为在这个服务器上，存在4个正在运行的java程序，而序号之后的数字就是pid，我们选取对应的pid，然后回车即可。</span><br><span class="line"></span><br><span class="line">[INFO] arthas home: /root/.arthas/lib/3.1.4/arthas</span><br><span class="line">[INFO] The target process already listen port 3658, skip attach.</span><br><span class="line">[INFO] arthas-client connect 127.0.0.1 3658</span><br><span class="line">  ,---.  ,------. ,--------.,--.  ,--.  ,---.   ,---.                           </span><br><span class="line"> /  O  \ |  .--. &apos;&apos;--.  .--&apos;|  &apos;--&apos;  | /  O  \ &apos;   .-&apos;                          </span><br><span class="line">|  .-.  ||  &apos;--&apos;.&apos;   |  |   |  .--.  ||  .-.  |`.  `-.                          </span><br><span class="line">|  | |  ||  |\  \    |  |   |  |  |  ||  | |  |.-&apos;    |                         </span><br><span class="line">`--&apos; `--&apos;`--&apos; &apos;--&apos;   `--&apos;   `--&apos;  `--&apos;`--&apos; `--&apos;`-----&apos;                          </span><br><span class="line"></span><br><span class="line">wiki      https://alibaba.github.io/arthas                                      </span><br><span class="line">tutorials https://alibaba.github.io/arthas/arthas-tutorials                     </span><br><span class="line">version   3.1.4                                                                 </span><br><span class="line">pid       6020                                                                  </span><br><span class="line">time      2019-10-14 17:56:41                                                   </span><br><span class="line"></span><br><span class="line">[arthas@6020]$ </span><br><span class="line"></span><br><span class="line">启动成功！</span><br></pre></td></tr></table></figure><h4 id="四、相关命令"><a href="#四、相关命令" class="headerlink" title="四、相关命令"></a>四、相关命令</h4><p>仅以主要的几个命令作为展示，具体命令及参数可以参阅官方文档。</p><p>1）输入dashboard，回车，仪表盘显示当前进程相关信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">____________________________________________________________________________________________________________________________________________________________________________________________________________________________________________</span><br><span class="line">|  ①Thread相关信息                                                                                                                                                    </span><br><span class="line">|  线程id              线程名称                                                      线程组                                  线程优先级            线程状态             线程消耗的cpu百分比   运行总时间           线程当前的中断位状态    是否守护线程</span><br><span class="line">|  ID                  NAME                                                        GROUP                                   PRIORITY            STATE               %CPU                TIME                INTERRUPTED         DAEMON</span><br><span class="line">|  188                 Timer-for-arthas-dashboard-f5864b5b-762a-4fb5-8cc5-65559bd6 system                                  10                  RUNNABLE            19                  0:0                 false               true</span><br><span class="line">|  36                  pool-1-thread-1                                             main                                    5                   TIMED_WAITING       5                   0:1                 false               false</span><br><span class="line">|  33                  Abandoned connection cleanup thread                         main                                    5                   TIMED_WAITING       0                   0:0                 false               true</span><br><span class="line">|  179                 AsyncAppender-Worker-arthas-cache.result.AsyncAppender      system                                  9                   WAITING             0                   0:0                 false               true</span><br><span class="line">|  12                  AsyncFileHandlerWriter-225534817                            main                                    5                   TIMED_WAITING       0                   0:0                 false               true</span><br><span class="line">|  94                  Attach Listener                                             system                                  9                   RUNNABLE            0                   0:0                 false               true</span><br><span class="line">|  70                  ContainerBackgroundProcessor[StandardEngine[Catalina]]      main                                    5                   TIMED_WAITING       0                   0:0                 false               true</span><br><span class="line">|  34                  Druid-ConnectionPool-Create-300669762                       main                                    5                   WAITING             0                   0:0                 false               true</span><br><span class="line">|  35                  Druid-ConnectionPool-Destroy-300669762                      main                                    5                   TIMED_WAITING       0                   0:0                 false               true</span><br><span class="line">|  3                   Finalizer                                                   system                                  8                   WAITING             0                   0:0                 false               true</span><br><span class="line">|  13                  GC Daemon                                                   system                                  2                   TIMED_WAITING       0                   0:0                 false               true</span><br><span class="line">|  14                  NioBlockingSelector.BlockPoller-1                           main                                    5                   RUNNABLE            0                   0:0                 false               true</span><br><span class="line">|  15                  NioBlockingSelector.BlockPoller-2                           main                                    5                   RUNNABLE            0                   0:0                 false               true</span><br><span class="line">|  2                   Reference Handler                                           system                                  10                  WAITING             0                   0:0                 false               true</span><br><span class="line">|  4                   Signal Dispatcher                                           system                                  9                   RUNNABLE            0                   0:0                 false               true</span><br><span class="line">|  76                  ajp-nio-38009-Acceptor-0                                    main                                    5                   RUNNABLE            0                   0:0                 false               true</span><br><span class="line">|  74                  ajp-nio-38009-ClientPoller-0                                main                                    5                   RUNNABLE            0                   0:0                 false               true</span><br><span class="line">|  75                  ajp-nio-38009-ClientPoller-1                                main                                    5                   RUNNABLE            0                   0:0                 false               true</span><br><span class="line">|  187                 as-command-execute-daemon                                   system                                  10                  TIMED_WAITING       0                   0:0                 false               true</span><br><span class="line">|  73                  http-nio-37080-Acceptor-0                                   main                                    5                   RUNNABLE            0                   0:0                 false               true</span><br><span class="line">|  71                  http-nio-37080-ClientPoller-0                               main                                    5                   RUNNABLE            0                   0:0                 false               true</span><br><span class="line">|  72                  http-nio-37080-ClientPoller-1                               main                                    5                   RUNNABLE            0                   0:0                 false               true</span><br><span class="line">|</span><br><span class="line">|  ②内存信息                                                                                                               ③垃圾回收</span><br><span class="line">|  Memory                                             used              total            max              usage            GC</span><br><span class="line">|  （堆）                                                                                                                   （垃圾回收次数）</span><br><span class="line">|  heap                                               424M              1897M            1897M            22.37%           gc.ps_scavenge.count                                  19</span><br><span class="line">|  （伊甸园）                                                                                                                （垃圾回收消耗时间）</span><br><span class="line">|  ps_eden_space                                      311M              387M             403M             77.28%           gc.ps_scavenge.time(ms)                               1405</span><br><span class="line">|  （幸存者区）                                                                                                              （标记-清除算法的次数）</span><br><span class="line">|  ps_survivor_space                                  40M               144M             144M             27.74%           gc.ps_marksweep.count                                 3</span><br><span class="line">|  （老年代）                                                                                                               （标记-清除算法的消耗时间）</span><br><span class="line">|  ps_old_gen                                         72M               1365M            1365M            5.32%            gc.ps_marksweep.time(ms)                              446</span><br><span class="line">|  （非堆区）                                                                                                                                                                                                                                                                                                                                                                        </span><br><span class="line">|  nonheap                                            137M              141M             -1               97.49%                                                                                                                                   </span><br><span class="line">|  （代码缓存区）                                                                                                                                                                                                                                                                                                                                                                        </span><br><span class="line">|  code_cache                                         40M               41M              240M             16.99%                                                                                                                                   </span><br><span class="line">|  （元空间）                                                                                                                                                                                    </span><br><span class="line">|  metaspace                                          86M               89M              -1               97.09%                                                                                                                                   </span><br><span class="line">|  （压缩空间）                                                                                                                                                                                    </span><br><span class="line">|  compressed_class_space                             10M               10M              1024M            0.99%                                                                                                                                    </span><br><span class="line">|  direct                                             80K               80K              -                100.00%                                                                                                                                  </span><br><span class="line">|  mapped                                             0K                0K               -                NaN%                                                                                                                                     </span><br><span class="line">|                                                                                                                                                                                      </span><br><span class="line">|  ④运行信息                                                                                                                                                                                    </span><br><span class="line">|  Runtime                                                                                                                                                                                                                                                                                                                                                                        </span><br><span class="line">|  os.name                                                                                                                 Linux                                                                                                                   </span><br><span class="line">|  os.version                                                                                                              3.10.0-957.1.3.el7.x86_64                                                                                               </span><br><span class="line">|  java.version                                                                                                            1.8.0_101                                                                                                               </span><br><span class="line">|  java.home                                                                                                               /opt/jdk1.8.0_101/jre                                                                                                   </span><br><span class="line">|  systemload.average                                                                                                      0.03                                                                                                                    </span><br><span class="line">|  processors                                                                                                              8                                                                                                                       </span><br><span class="line">|  uptime                                                                                                                  11956s                                                                                                                  </span><br><span class="line">|________________________________________________________________________________________________________________________________________________________________________________________________________________________________________</span><br><span class="line"></span><br><span class="line">说明</span><br><span class="line">ID: Java级别的线程ID，注意这个ID不能跟jstack中的nativeID一一对应</span><br><span class="line">NAME: 线程名</span><br><span class="line">GROUP: 线程组名</span><br><span class="line">PRIORITY: 线程优先级, 1~10之间的数字，越大表示优先级越高</span><br><span class="line">STATE: 线程的状态</span><br><span class="line">CPU%: 线程消耗的cpu占比，采样100ms，将所有线程在这100ms内的cpu使用量求和，再算出每个线程的cpu使用占比。</span><br><span class="line">TIME: 线程运行总时间，数据格式为分：秒</span><br><span class="line">INTERRUPTED: 线程当前的中断位状态</span><br><span class="line">DAEMON: 是否是daemon线程</span><br><span class="line"></span><br><span class="line">通过上述信息，可以帮助我们快速定位相关问题线程。</span><br></pre></td></tr></table></figure><p>2）查看具体线程信息使用 [thread 线程id]</p><p>3）查看类里某个方法的返回值和入参</p><p>命令+类完全限定名+监测方法+表达式<br>watch cn.asae.e.contract.web.ContractSubjectController getContractSubjectLogs “{params,returnObj}”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">表达式核心变量列表：</span><br><span class="line">loader      本次调用类所在的 ClassLoader</span><br><span class="line">clazz       本次调用类的 Class 引用</span><br><span class="line">method      本次调用方法反射引用</span><br><span class="line">target      本次调用类的实例</span><br><span class="line">params      本次调用参数列表，这是一个数组，如果方法是无参方法则为空数组</span><br><span class="line">returnObj   本次调用返回的对象。当且仅当 isReturn==true 成立时候有效，表明方法调用是以正常返回的方式结束。如果当前方法无返回值 void，则值为 null</span><br><span class="line">throwExp    本次调用抛出的异常。当且仅当 isThrow==true 成立时有效，表明方法调用是以抛出异常的方式结束。</span><br><span class="line">isBefore    辅助判断标记，当前的通知节点有可能是在方法一开始就通知，此时 isBefore==true 成立，同时 isThrow==false 和 isReturn==false，因为在方法刚开始时，还无法确定方法调用将会如何结束。</span><br><span class="line">isThrow     辅助判断标记，当前的方法调用以抛异常的形式结束。</span><br><span class="line">isReturn    辅助判断标记，当前的方法调用以正常返回的形式结束。</span><br></pre></td></tr></table></figure><p><img src="/img/xjy/p83001.png" alt="img"></p><p>4）方法调用路径、耗时解析</p><p>方法内部调用路径，并输出方法路径上的每个节点上耗时<br>trace cn.asae.e.contract.web.ContractController getContract</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">__________________________________________________________________________________________________________________________________________________________________</span><br><span class="line">|      时间戳                  线程名称                           线程id 是否守护进程    优先级      线程上下文类加载器                                                  </span><br><span class="line">|  `---ts=2019-10-21 16:33:13;thread_name=http-nio-37080-exec-5;id=52;is_daemon=true;priority=5;TCCL=org.apache.catalina.loader.WebappClassLoader@67fff846       |</span><br><span class="line">|           调用信息 - 方法拦截器 - 目标方法</span><br><span class="line">|      `---[1483.931493ms] cn.asae.e.contract.web.ContractController$$EnhancerBySpringCGLIB$$feabdb7f:getContract()                                              |</span><br><span class="line">|          `---[1483.715988ms] org.springframework.cglib.proxy.MethodInterceptor:intercept() #0                                                                  |</span><br><span class="line">|              `---[1482.519392ms] cn.asae.e.contract.web.ContractController:getContract()                                                                       |</span><br><span class="line">|                  +---[0.03355ms] cn.asae.core.common.response.v2.ResponseBodyV2:&lt;init&gt;() #243                                                                  |</span><br><span class="line">|                  +---[0.016195ms] cn.asae.core.common.token.TokenCache:getInstance() #246                                                                      |</span><br><span class="line">|                  +---[0.01442ms] cn.asae.core.common.token.TokenCache:get() #246                                                                               |</span><br><span class="line">|                  +---[0.02442ms] cn.asae.e.common.model.Op:createOp() #246                                                                                     |</span><br><span class="line">|                  +---[161.579687ms] cn.asae.e.contract.service.ContractService:getContract() #249                                                              |</span><br><span class="line">|                  +---[164.980125ms] cn.asae.e.contract.service.ContractService:getContractOcrs() #251                                                          |</span><br><span class="line">|                  +---[0.036474ms] com.google.common.collect.Maps:newHashMap() #255                                                                             |</span><br><span class="line">|                  +---[158.223852ms] cn.asae.e.contract.service.ContractService:getContractMembers() #260                                                       |</span><br><span class="line">|                  +---[0.025848ms] com.google.common.collect.Lists:newArrayList() #263                                                                          |</span><br><span class="line">|                  +---[0.024837ms] cn.asae.e.contract.model.ContractVO:getContractNum() #264                                                                    |</span><br><span class="line">|                  +---[160.942618ms] cn.asae.e.contract.service.ContractService:getContracts() #266                                                             |</span><br><span class="line">|                  +---[0.024172ms] org.apache.commons.collections.MapUtils:isNotEmpty() #271                                                                    |</span><br><span class="line">|                  +---[198.281335ms] cn.asae.e.organization.service.AccountService:getAccountLite() #291                                                        |</span><br><span class="line">|                  +---[159.761087ms] cn.asae.e.organization.service.DepartmentService:getDepartment() #295                                                      |</span><br><span class="line">|                  +---[0.009013ms] org.apache.commons.collections.MapUtils:isNotEmpty() #297                                                                    |</span><br><span class="line">|                  +---[0.013967ms] cn.asae.e.contract.model.ContractVO:getSignId() #312                                                                         |</span><br><span class="line">|                  +---[0.006482ms] com.google.common.collect.Lists:newArrayList() #312                                                                          |</span><br><span class="line">|                  +---[160.503511ms] cn.asae.e.organization.service.AccountService:getAccountLite() #312                                                        |</span><br><span class="line">|                  +---[0.015528ms] cn.asae.e.contract.model.ContractVO:getDepartmentId() #316                                                                   |</span><br><span class="line">|                  +---[0.006504ms] com.google.common.collect.Lists:newArrayList() #316                                                                          |</span><br><span class="line">|                  +---[159.023976ms] cn.asae.e.organization.service.DepartmentService:getDepartment() #316                                                      |</span><br><span class="line">|                  +---[0.005827ms] cn.asae.e.contract.model.ContractVO:getSignId() #319                                                                         |</span><br><span class="line">|                  +---[0.017222ms] cn.asae.e.organization.model.Account:&lt;init&gt;() #319                                                                           |</span><br><span class="line">|                  +---[0.0142ms] cn.asae.e.organization.model.Account:getFullname() #319                                                                        |</span><br><span class="line">|                  +---[0.012931ms] cn.asae.e.contract.model.ContractVO:setSignName() #319                                                                       |</span><br><span class="line">|                  +---[0.00492ms] cn.asae.e.contract.model.ContractVO:getDepartmentId() #321                                                                    |</span><br><span class="line">|                  +---[0.010856ms] cn.asae.e.organization.model.DepartmentVO:&lt;init&gt;() #321                                                                      |</span><br><span class="line">|                  +---[0.018637ms] cn.asae.e.organization.model.DepartmentVO:getName() #323                                                                     |</span><br><span class="line">|                  +---[0.011019ms] cn.asae.e.contract.model.ContractVO:setDepartmentName() #323                                                                 |</span><br><span class="line">|                  +---[0.010145ms] cn.asae.e.organization.model.DepartmentVO:getOrganizationName() #324                                                         |</span><br><span class="line">|                  +---[0.010541ms] cn.asae.e.contract.model.ContractVO:setOrganizationName() #324                                                               |</span><br><span class="line">|                  +---[0.005493ms] com.google.common.collect.Maps:newHashMap() #326                                                                             |</span><br><span class="line">|                  +---[0.014093ms] cn.asae.core.common.response.v2.ResponseBodyV2:init() #333                                                                   |</span><br><span class="line">|                  +---[145.783843ms] cn.asae.e.contract.service.ContractService:addContractLog() #335                                                           |</span><br><span class="line">|                  `---[0.386367ms] cn.asae.core.common.response.v2.ResponseBodyV2:toResponse() #342                                                             |</span><br><span class="line">|________________________________________________________________________________________________________________________________________________________________|</span><br></pre></td></tr></table></figure><p>5）时空隧道<br>方法执行数据的时空隧道，记录下指定方法每次调用的入参和返回信息，并能对这些不同的时间下调用进行观测</p><p>tt -t cn.asae.e.contract.web.ContractSubjectController getContractSubjectLogs<br>-t 代表记录下每次方法执行情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">_________________________________________________________________________________________________________________________________________________________________</span><br><span class="line">| INDEX | TIMESTAMP           | COST(ms)   | IS-RET | IS-EXP | OBJECT     | CLASS                                                  | METHOD                     |                            </span><br><span class="line">|-------|---------------------|------------|--------|--------|------------|--------------------------------------------------------|----------------------------|</span><br><span class="line">| 1000  | 2019-10-17 16:46:20 | 315.436761 | true   | false  | 0x2eb74ebb | ContractSubjectController                              | getContractSubjectLogs     |         </span><br><span class="line">| 1001  | 2019-10-17 16:46:20 | 326.193324 | true   | false  | 0xeb982ed6 | ContractSubjectController$$EnhancerBySpringCGLIB$$23d1 | getContractSubjectLogs     |                         </span><br><span class="line">|_______|_____________________|____________|________|________|____________|________________________________________________________|____________________________|</span><br><span class="line"></span><br><span class="line">表格字段说明</span><br><span class="line">表格字段        字段解释</span><br><span class="line">INDEX       时间片段记录编号，每一个编号代表着一次调用，后续tt还有很多命令都是基于此编号指定记录操作，非常重要。</span><br><span class="line">TIMESTAMP   方法执行的本机时间，记录了这个时间片段所发生的本机时间</span><br><span class="line">COST(ms)    方法执行的耗时</span><br><span class="line">IS-RET      方法是否以正常返回的形式结束</span><br><span class="line">IS-EXP      方法是否以抛异常的形式结束</span><br><span class="line">OBJECT      执行对象的hashCode()，注意，曾经有人误认为是对象在JVM中的内存地址，但很遗憾他不是。但他能帮助你简单的标记当前执行方法的类实体</span><br><span class="line">CLASS       执行的类名</span><br><span class="line">METHOD      执行的方法名</span><br></pre></td></tr></table></figure><p><strong>为什么调用一次接口会出现两条记录？</strong><br>因为SpringMVC初始化时会通过cglib生成ContractSubjectController的代理对象，DispatchServlet真正使用的却是这个代理对象，在代理对象里调用ContractSubjectController的getContractSubjectLogs方法，所以当我们执行tt watch命令时，会出现两条。</p><p>顺序如下：</p><p><code>ContractSubjectControllerEnhancerBySpringCGLIBEnhancerBySpringCGLIBeefa08b</code> -&gt; <code>ContractSubjectController</code> -&gt; <code>getContractSubjectLogs()</code><br>往上查找调用者，并做展示，我们会发现第一条的执行时间略小于第二条的执行时间，基本符合上述我们的推断。</p><p>6）查看JVM已加载的类信息</p><p>sc -d cn.asae.e.contract.web.ContractSubjectController</p><p>-d 输出当前类的详细信息，包括这个类所加载的原始文件来源、类的声明、加载的ClassLoader等详细信息。<br>如果一个类被多个ClassLoader所加载，则会出现多次</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">____________________________________________________________________________________________________________________________________________</span><br><span class="line">|  class-info        cn.asae.e.contract.web.ContractSubjectController                                                                      |</span><br><span class="line">|  code-source       /opt/tomcat-servers/apache-tomcat-e/webapps/asae-e/WEB-INF/classes/                                                   |</span><br><span class="line">|  name              cn.asae.e.contract.web.ContractSubjectController                                                                      |</span><br><span class="line">|  isInterface       false                                                                                                                 |</span><br><span class="line">|  isAnnotation      false                                                                                                                 |</span><br><span class="line">|  isEnum            false                                                                                                                 |</span><br><span class="line">|  isAnonymousClass  false                                                                                                                 |</span><br><span class="line">|  isArray           false                                                                                                                 |</span><br><span class="line">|  isLocalClass      false                                                                                                                 |</span><br><span class="line">|  isMemberClass     false                                                                                                                 |</span><br><span class="line">|  isPrimitive       false                                                                                                                 |</span><br><span class="line">|  isSynthetic       false                                                                                                                 |</span><br><span class="line">|  simple-name       ContractSubjectController                                                                                             |</span><br><span class="line">|  modifier          public                                                                                                                |</span><br><span class="line">|  annotation        org.springframework.web.bind.annotation.RestController,org.springframework.web.bind.annotation.RequestMapping         |</span><br><span class="line">|  interfaces                                                                                                                              |</span><br><span class="line">|  super-class       +-java.lang.Object                                                                                                    |</span><br><span class="line">|  class-loader      +-WebappClassLoader                                                                                                   |</span><br><span class="line">|                        context: asae-e                                                                                                   |</span><br><span class="line">|                        delegate: false                                                                                                   |</span><br><span class="line">|                      ----------&gt; Parent Classloader:                                                                                     |</span><br><span class="line">|                      java.net.URLClassLoader@3af49f1c                                                                                    |</span><br><span class="line">|                                                                                                                                          |</span><br><span class="line">|                      +-java.net.URLClassLoader@3af49f1c                                                                                  |</span><br><span class="line">|                        +-sun.misc.Launcher$AppClassLoader@5c647e05                                                                       |</span><br><span class="line">|                          +-sun.misc.Launcher$ExtClassLoader@6537cf78                                                                     |</span><br><span class="line">|  classLoaderHash   67fff846                                                                                                              |</span><br><span class="line">|                                                                                                                                          |</span><br><span class="line">|  class-info        cn.asae.e.contract.web.ContractSubjectController$$EnhancerBySpringCGLIB$$8d1d153a                                     |</span><br><span class="line">|  code-source       /opt/tomcat-servers/apache-tomcat-e/webapps/asae-e/WEB-INF/classes/                                                   |</span><br><span class="line">|  name              cn.asae.e.contract.web.ContractSubjectController$$EnhancerBySpringCGLIB$$8d1d153a                                     |</span><br><span class="line">|  isInterface       false                                                                                                                 |</span><br><span class="line">|  isAnnotation      false                                                                                                                 |</span><br><span class="line">|  isEnum            false                                                                                                                 |</span><br><span class="line">|  isAnonymousClass  false                                                                                                                 |</span><br><span class="line">|  isArray           false                                                                                                                 |</span><br><span class="line">|  isLocalClass      false                                                                                                                 |</span><br><span class="line">|  isMemberClass     false                                                                                                                 |</span><br><span class="line">|  isPrimitive       false                                                                                                                 |</span><br><span class="line">|  isSynthetic       false                                                                                                                 |</span><br><span class="line">|  simple-name       ContractSubjectController$$EnhancerBySpringCGLIB$$8d1d153a                                                            |</span><br><span class="line">|  modifier          public                                                                                                                |</span><br><span class="line">|  annotation                                                                                                                              |</span><br><span class="line">|  interfaces        org.springframework.aop.SpringProxy,org.springframework.aop.framework.Advised,org.springframework.cglib.proxy.Factory |</span><br><span class="line">|  super-class       +-cn.asae.e.contract.web.ContractSubjectController                                                                    |</span><br><span class="line">|                      +-java.lang.Object                                                                                                  |</span><br><span class="line">|  class-loader      +-WebappClassLoader                                                                                                   |</span><br><span class="line">|                        context: asae-e                                                                                                   |</span><br><span class="line">|                        delegate: false                                                                                                   |</span><br><span class="line">|                      ----------&gt; Parent Classloader:                                                                                     |</span><br><span class="line">|                      java.net.URLClassLoader@3af49f1c                                                                                    |</span><br><span class="line">|                                                                                                                                          |</span><br><span class="line">|                      +-java.net.URLClassLoader@3af49f1c                                                                                  |</span><br><span class="line">|                        +-sun.misc.Launcher$AppClassLoader@5c647e05                                                                       |</span><br><span class="line">|                          +-sun.misc.Launcher$ExtClassLoader@6537cf78                                                                     |</span><br><span class="line">|  classLoaderHash   67fff846                                                                                                              |</span><br><span class="line">|__________________________________________________________________________________________________________________________________________|</span><br></pre></td></tr></table></figure><p>7）退出arthas<br>quit —— 退出当前 Arthas 客户端，其他 Arthas 客户端不受影响<br>shutdown —— 关闭 Arthas 服务端，所有 Arthas 客户端全部退出 &amp; 重置所有增强过的类，就不用单独调用reset</p><h4 id="五、来自天边的”海市蜃楼”"><a href="#五、来自天边的”海市蜃楼”" class="headerlink" title="五、来自天边的”海市蜃楼”"></a>五、来自天边的”海市蜃楼”</h4><p>Arthas还提供 Web Console。</p><p>java -jar arthas-boot.jar —target-ip 192.168.168.67<br>在局域网内，其它机器可访问 <a href="http://192.168.168.67:8563/" target="_blank" rel="noopener">http://192.168.168.67:8563</a><br>默认情况下，arthas只listen 127.0.0.1，所以如果想从远程连接，则可以使用 —target-ip参数指定listen的IP，更多参考-h的帮助说明。 注意会有安全风险，考虑tunnel server的方案。</p><h4 id="六、结束"><a href="#六、结束" class="headerlink" title="六、结束"></a>六、结束</h4><p>关于Arthas就简单介绍到这里了，具体使用还要参考官方文档，希望Arthas能在大家日后的工作学习中帮助大家！</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p83.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>接口调试过程中的小技巧</title>
      <link>https://www.xiajunyi.com/pages/p82.html</link>
      <guid>https://www.xiajunyi.com/pages/p82.html</guid>
      <pubDate>Wed, 08 Dec 2021 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p82000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;无论是前端还是后端，在开发的过程中，经常会对接其他系统进行一些接口调用的调试，对于简单的单个接口用postman直接输入各个参数值调用就可以了，假如遇到需要多个接口之间依赖参数传递，或者想抓取对比代码中真正发出的请求参数是否是正确的，或者是否有多余跳转时，可以借助一些工具或技巧来完成。下面记录一些实际应用过程中的小技巧案例的思路，以后可以举一反三。
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p82000.png" alt="img"><br></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>无论是前端还是后端，在开发的过程中，经常会对接其他系统进行一些接口调用的调试，对于简单的单个接口用postman直接输入各个参数值调用就可以了，假如遇到需要多个接口之间依赖参数传递，或者想抓取对比代码中真正发出的请求参数是否是正确的，或者是否有多余跳转时，可以借助一些工具或技巧来完成。下面记录一些实际应用过程中的小技巧案例的思路，以后可以举一反三。<a id="more"></a></p><h2 id="Postman篇"><a href="#Postman篇" class="headerlink" title="Postman篇"></a>Postman篇</h2><h3 id="通过参数配置修改不同环境的域名"><a href="#通过参数配置修改不同环境的域名" class="headerlink" title="通过参数配置修改不同环境的域名"></a>通过参数配置修改不同环境的域名</h3><p>问题思考1：在调试接口的过程中我们经常需要对比不同环境中的请求报文结果，如果每次重新填写域名是不是比较痛苦？</p><p>下面是通过通过参数配置修改不同环境的域名的方法：</p><ul><li>首先，在postman的请求地址栏中用占位域名，例如：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;domain&#125;&#125;/cloudDesktop/auth/login</span><br></pre></td></tr></table></figure><ul><li><p>然后，点击右上角的“眼睛图标”的按钮，定义不同环境的domain值，例如：</p><p>localhost环境：</p></li></ul><table><thead><tr><th>VARIABLE</th><th>INITIAL</th><th>CURRENT VALUE</th></tr></thead><tbody><tr><td>domain</td><td><a href="http://127.0.0.1:8080" target="_blank" rel="noopener">http://127.0.0.1:8080</a></td><td><a href="http://127.0.0.1:8080" target="_blank" rel="noopener">http://127.0.0.1:8080</a></td></tr></tbody></table><p>  dev环境：</p><table><thead><tr><th>VARIABLE</th><th>INITIAL</th><th>CURRENT VALUE</th></tr></thead><tbody><tr><td>domain</td><td><a href="http://mydev.com" target="_blank" rel="noopener">http://mydev.com</a></td><td><a href="http://mydev.com" target="_blank" rel="noopener">http://mydev.com</a></td></tr></tbody></table><ul><li>最后，通过点击右上角“眼睛图标”左侧紧邻的环境切换选项，即可切换到localhost或者dev环境，相应的参数值会替换掉占位的位置中去。</li></ul><p>当然，不仅可以替换域名，替换其他参数也类似，只要明白了替换原理，就可以自定义不同环境的参数值用于替换相应的参数。</p><h3 id="通过简单脚本设置请求的token值"><a href="#通过简单脚本设置请求的token值" class="headerlink" title="通过简单脚本设置请求的token值"></a>通过简单脚本设置请求的token值</h3><p>问题思考2：上个案例利用定义了不同环境中有不同的参数值来替换参数，但是这有一个缺点，假如我需要替换的参数是个token值，这个值在每次发送登录请求后都是变化的，那么如何动态替换呢？</p><p>这就需要结合简单的脚本处理来实现了：</p><ul><li><p>首先，构建一个登录接口的请求，这里不在赘述</p></li><li><p>然后，在我的登录请求的Tests栏目（该栏目位于Body、Headrs栏目位于同一行）中，输入下面脚本：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 把responseBody转为json字符串</span></span><br><span class="line"><span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(responseBody);</span><br><span class="line"><span class="comment">// 设置环境变量token，供后面的接口引用</span></span><br><span class="line">pm.environment.set(<span class="string">"token"</span>, data.content.token);</span><br></pre></td></tr></table></figure></li><li><p>接着，先发起登录请求，这时token值就已经赋值给token变量了（如果不放心，可以通过“眼睛图标”去查看token参数对应的CURRENT VALUE值是否被赋予新值）</p></li><li><p>最后，完成了上面的设置，在剩余其他请求中，只要把需要用到token值的地方，用来占位即可。</p></li></ul><p>当然，上面的脚本要根据自己的登录接口返回报文格式进行修改，请举一反三。</p><h2 id="Fiddler篇"><a href="#Fiddler篇" class="headerlink" title="Fiddler篇"></a>Fiddler篇</h2><h3 id="抓取https请求的报文"><a href="#抓取https请求的报文" class="headerlink" title="抓取https请求的报文"></a>抓取https请求的报文</h3><p>问题思考3：在使用Fiddler进行抓包的过程中，默认是无法抓取到https请求的报文的，那么怎么实现呢？<br>这时候需要进行如下设置：</p><ul><li>首先，请在Fiddler Options的HTTPS栏目中按照下图勾选配置：<br><img src="/img/xjy/p82001.png" alt="img"></li><li>接着，将Postman或者浏览器的代理端口设置为Fiddler的默认监听端口8888</li><li>最后，在Fiddler的主页面就可以看到抓取的每次请求的HTTP和HTTPS记录了。</li></ul><h3 id="抓取JAVA程序中请求的报文"><a href="#抓取JAVA程序中请求的报文" class="headerlink" title="抓取JAVA程序中请求的报文"></a>抓取JAVA程序中请求的报文</h3><p>问题思考4：在使用中发现，对于IDEA中的java程序发送的请求比较特殊，按照上述方法还是无法抓取到报文，那么如何实现呢？<br>需要采用下面的步骤：</p><ul><li>首先，导出Fiddler的证书（在Fiddler Options的HTTPS栏目中有导出选项），我这里导出到D盘</li><li><p>然后，再命令行中执行如下命令将证书加载到java信任环境中（中间会以交互的形式询问设置证书的密码，例如我这里输入的密码是changeit，记住它，在下面的步骤中会用到这个值）</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span>   <span class="variable">%JAVA_HOME%</span>\jre\lib\security</span><br><span class="line">keytool.exe -import -file D:\FiddlerRoot.cer -keystore D:\FiddlerKeystore -alias Fiddler</span><br></pre></td></tr></table></figure></li><li><p>最后，在程序的java启动里加上如下配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span><span class="string">DproxySet=true</span> </span><br><span class="line"><span class="bullet">-</span><span class="string">DproxyHost=127.0.0.1</span> </span><br><span class="line"><span class="bullet">-</span><span class="string">DproxyPort=8888</span> </span><br><span class="line"><span class="bullet">-</span><span class="string">Djavax.net.ssl.trustStore=D:\FiddlerKeystore</span> </span><br><span class="line"><span class="bullet">-</span><span class="string">Djavax.net.ssl.trustStorePassword=changeit</span></span><br></pre></td></tr></table></figure><p>执行完上述步骤后，在JAVA程序中的请求就会被Fiddler抓取到了。</p><h3 id="修改请求或者返回报文中的参数"><a href="#修改请求或者返回报文中的参数" class="headerlink" title="修改请求或者返回报文中的参数"></a>修改请求或者返回报文中的参数</h3></li></ul><p>问题思考5：在我们后端人员调试的过程中，有些前端页面发起的请求，这时候后台接口修改了，需要前端页面在功能流程中多传几个参数，如果这时没有前端人员配合，那么我么如何在抓包的过程中拦截请求进行修改呢？<br>以修改抓取到的请求报文为例，采用如下步骤：</p><ul><li>首先，选择开启请求拦截规则：Rules–&gt;Automatic Breakpoints–&gt;Before Requests</li><li>然后，发送请求会被拦截暂停，选择要修改的请求，在请求的Raw选项中可以进行参数的修改</li><li>最后，点击GO会进行下一步，如果想切换是否开启拦截，可以点击左下角Capturing进行切换控制。<br>当然，这是比较粗粒度的拦截，更细的拦截规则可以编辑js脚本去完成，更深层的用法，需要自己去拓展了。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>个人认为，我这里的技巧都是很浅显的，对于大多数人来说早已使用的滚瓜烂熟。我这里首先是为自己记录思路，另外看看能不能起到抛砖引玉的作用，当然更高级的用法可以使工作效率有显著提升，大家可以在使用过程中进一步搜索高级用法加强自己的调试技巧。</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p82.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>实现SpringBoot项目中Apollo配置的动态解密</title>
      <link>https://www.xiajunyi.com/pages/p81.html</link>
      <guid>https://www.xiajunyi.com/pages/p81.html</guid>
      <pubDate>Tue, 30 Nov 2021 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p81000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;公司的配置中心用的是Apollo，在使用过程中，有将一些敏感配置数据进行加密存储的需求，这样就需要后台实现动态解密了，具体实现过程记录在这里
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p81000.png" alt="img"><br></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>公司的配置中心用的是Apollo，在使用过程中，有将一些敏感配置数据进行加密存储的需求，这样就需要后台实现动态解密了，具体实现过程记录在这里<a id="more"></a></p><h2 id="核心实现"><a href="#核心实现" class="headerlink" title="核心实现"></a>核心实现</h2><h3 id="引入maven依赖"><a href="#引入maven依赖" class="headerlink" title="引入maven依赖"></a>引入maven依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 实现加解密--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.ulisesbocchio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jasypt-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 用于配合事件机制动态更新属性值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="定义监听类"><a href="#定义监听类" class="headerlink" title="定义监听类"></a>定义监听类</h3><p>定义监听类，用于监听到Apollo配置改动时，触发EnvironmentChangeEvent事件，动态更新配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApolloChangeListener</span> <span class="keyword">implements</span> <span class="title">ApplicationContextAware</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> FusionLogger logger = FusionLoggerManager.getLogger(ApolloChangeListener.class);</span><br><span class="line">    <span class="keyword">private</span> ApplicationContext applicationContext;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> RefreshScope refreshScope;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ApolloChangeListener</span><span class="params">(RefreshScope refreshScope)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.refreshScope = refreshScope;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实时监听配置修改，并对修改项进行处理</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> changeEvent 配置修改事件(其中包含修改信息)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApolloConfigChangeListener</span>(<span class="string">"$&#123;apollo.bootstrap.namespaces&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">configChangeHandler</span><span class="params">(ConfigChangeEvent changeEvent)</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"================Apollo auto refresh start==========================="</span>);</span><br><span class="line">        <span class="keyword">for</span> (String changedKey : changeEvent.changedKeys()) &#123;</span><br><span class="line">            ConfigChange configChange = changeEvent.getChange(changedKey);</span><br><span class="line">            String oldValue = configChange.getOldValue();</span><br><span class="line">            String newValue = configChange.getNewValue();</span><br><span class="line">            logger.info(<span class="string">"changedKey:&#123;&#125;,oldValue:&#123;&#125;, newValue:&#123;&#125;"</span>, changedKey, oldValue, newValue);</span><br><span class="line">        &#125;</span><br><span class="line">        refreshContext(changeEvent);</span><br><span class="line">        logger.info(<span class="string">"================Apollo auto refresh end==========================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跟进配置修改刷新上下文内容</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> changeEvent 配置修改事件(其中包含修改信息)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">refreshContext</span><span class="params">(ConfigChangeEvent changeEvent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.applicationContext.publishEvent(<span class="keyword">new</span> EnvironmentChangeEvent(changeEvent.changedKeys()));</span><br><span class="line">        refreshScope.refreshAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.applicationContext = applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><h3 id="生成加密串"><a href="#生成加密串" class="headerlink" title="生成加密串"></a>生成加密串</h3><p>调用如下工具类中的encrypt方法生成需要的加密串，这里需要传入待加密串和盐值作为参数，最后输出的即为加密串：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JasyptUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> salt</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encrypt</span><span class="params">(String data, String salt)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(data) || StringUtils.isBlank(salt)) &#123;</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">        String encryptData;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BasicTextEncryptor textEncryptor = <span class="keyword">new</span> BasicTextEncryptor();</span><br><span class="line">            textEncryptor.setPassword(salt);</span><br><span class="line">            encryptData = textEncryptor.encrypt(data);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(<span class="string">"加密失败, msg:&#123;&#125;"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> encryptData;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> salt</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decrypt</span><span class="params">(String data, String salt)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(data) || StringUtils.isBlank(salt)) &#123;</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125;</span><br><span class="line">        String decryptData;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BasicTextEncryptor textEncryptor = <span class="keyword">new</span> BasicTextEncryptor();</span><br><span class="line">            textEncryptor.setPassword(salt);</span><br><span class="line">            decryptData = textEncryptor.decrypt(data);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ServiceException(<span class="string">"解密失败, msg:&#123;&#125;"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> decryptData;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试生成加串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String encryptValue = JasyptUtil.encrypt(<span class="string">"12345678"</span>, <span class="string">"yourSaltValue"</span>);</span><br><span class="line">        System.out.println(encryptValue);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Apollo中增加配置"><a href="#Apollo中增加配置" class="headerlink" title="Apollo中增加配置"></a>Apollo中增加配置</h3><p>将需要解密的串用ENC()包裹，例如下面的test.password：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test.name = hello</span><br><span class="line">test.password = ENC(LVeJkBZPAvYO3Vwk6i/ehZEtyWdgSD14)</span><br></pre></td></tr></table></figure><h3 id="自定义配置类"><a href="#自定义配置类" class="headerlink" title="自定义配置类"></a>自定义配置类</h3><p>需要动态更新的配置，在定义时需要在类上加上@ConfigurationProperties注解，例如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"test"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestConfigBean</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="应用启动时传入解密盐值"><a href="#应用启动时传入解密盐值" class="headerlink" title="应用启动时传入解密盐值"></a>应用启动时传入解密盐值</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span><span class="string">Djasypt.encryptor.password=yourSaltValue</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我个人认为配置中心一般都在公司内网环境中，如果没有特殊原因，没必要进行配置的加密，因为这将带来如下一些缺点：</p><ul><li><p>1、增加定义配置时的复杂性</p></li><li><p>2、密钥一变，所有配置都报错，要去把所有配置都改一遍</p></li><li><p>3、加密值个别位复制或者输入错误的情况下，开发和维护人员无法快速直观的发现差异</p></li></ul><p>话说回来，存在即合理，对系统配置的安全性加深一层保障也是一定意义的。<br>好记性不如烂笔头，这里记录一下这种方案的实现方式，方便查询。</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p81.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>git文件过大无法正常clone的一种解决方式</title>
      <link>https://www.xiajunyi.com/pages/p80.html</link>
      <guid>https://www.xiajunyi.com/pages/p80.html</guid>
      <pubDate>Sat, 20 Nov 2021 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p80000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;随着我的博客文章数增加，图片等资源原来越多，这样我的整个博客源码包在github上太大，导致在新电脑上整个clone时会失败，在网上找了一种先浅克隆再完整拉取的一种解决方式，这里记录一下！
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p80000.png" alt="img"><br></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>随着我的博客文章数增加，图片等资源原来越多，这样我的整个博客源码包在github上太大，导致在新电脑上整个clone时会失败，在网上找了一种先浅克隆再完整拉取的一种解决方式，这里记录一下！<a id="more"></a></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="先浅克隆"><a href="#先浅克隆" class="headerlink" title="先浅克隆"></a>先浅克隆</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://xxx-project.git --depth 1</span></span><br></pre></td></tr></table></figure><h3 id="再完整拉取"><a href="#再完整拉取" class="headerlink" title="再完整拉取"></a>再完整拉取</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> xxx-project <span class="comment"># 进入项目目录</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git fetch --unshallow <span class="comment"># 拉取当前分支完整数据</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git remote <span class="built_in">set</span>-branches origin <span class="string">'*'</span> <span class="comment"># 关联上所有远程分支</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git fetch -v <span class="comment"># 拉取所有远程分支</span></span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>好记性不如烂笔头，随手记录，方便查询。</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p80.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Ingress Controller之Nginx-Ingress的安装和使用记录</title>
      <link>https://www.xiajunyi.com/pages/p79.html</link>
      <guid>https://www.xiajunyi.com/pages/p79.html</guid>
      <pubDate>Thu, 20 May 2021 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p79000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这一期实战一下K8S中Ingress Controller的安装和Ingress配置，Ingress Controller有很多种，我这里使用的是Ingress-Nginx，先体验一下整个配置到实现访问的过程吧！
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p79000.png" alt="img"><br></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这一期实战一下K8S中Ingress Controller的安装和Ingress配置，Ingress Controller有很多种，我这里使用的是Ingress-Nginx，先体验一下整个配置到实现访问的过程吧！<a id="more"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>K8S集群在发布应用时，配置的端口有以下几种：port、targetPort、nodePort，自我理解分别是容器暴露出可以供容器之间互相访问的端口、容器内应用需要暴露的端口、暴露给宿主机ip可以访问的端口。为了外部域名访问时能给自动实现负载均衡的访问各个Pod，最好还是使用Ingress Controller来管理访问的接入。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>K8S版本：v1.21.0</li><li>Nginx-Ingress版本:1.9.1</li></ul><h2 id="安装Ingress-Controller（Nginx-Ingress）"><a href="#安装Ingress-Controller（Nginx-Ingress）" class="headerlink" title="安装Ingress Controller（Nginx-Ingress）"></a>安装Ingress Controller（Nginx-Ingress）</h2><h3 id="Pod等相关配置"><a href="#Pod等相关配置" class="headerlink" title="Pod等相关配置"></a>Pod等相关配置</h3><p>执行如下命令，其中包含诸多Nginx-Ingress服务相关K8S配置<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl apply -f https://kuboard.cn/install-script/v1.21.x/nginx-ingress.yaml</span></span><br></pre></td></tr></table></figure></p><h3 id="Service配置"><a href="#Service配置" class="headerlink" title="Service配置"></a>Service配置</h3><p>编写ingress-svc.yml文件：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">nginx-ingress</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-ingress</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">nginx-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">    - port:</span> <span class="number">8880</span></span><br><span class="line"><span class="attr">      targetPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">      nodePort:</span> <span class="number">31280</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">nginx-ingress</span></span><br></pre></td></tr></table></figure></p><p>创建Service<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl apply -f ingress-svc.yml</span></span><br></pre></td></tr></table></figure></p><p>后续可以通过新增或修改Ingress规则，即可动态更新Nginx-Ingress服务中的配置了。</p><h2 id="配置一个Ingress规则"><a href="#配置一个Ingress规则" class="headerlink" title="配置一个Ingress规则"></a>配置一个Ingress规则</h2><p>下面以发布一个tomcat对外的ingress规则为例。<br>编写ingress规则文件my-ingress-tomcat.yml:<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">my-ingress-tomcat</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">tomcat.yourdomain.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">my-tomcat</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure></p><p>创建ingress规则：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl apply -f my-ingress-tomcat.yml</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> kubectl get ingress</span></span><br></pre></td></tr></table></figure></p><h2 id="发布my-tomcat应用"><a href="#发布my-tomcat应用" class="headerlink" title="发布my-tomcat应用"></a>发布my-tomcat应用</h2><p>部署配置文件my-tomcat-deployment.yml如下：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">my-tomcat</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">my-tomcat</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      k8s-app:</span> <span class="string">my-tomcat</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">my-tomcat</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        k8s-app:</span> <span class="string">my-tomcat</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">my-tomcat</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">tomcat</span></span><br></pre></td></tr></table></figure></p><p>Service配置文件my-tomcat-svc.yml如下：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">my-tomcat</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">my-tomcat</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">tcp-8080-8080-my-tomcat</span></span><br><span class="line"><span class="attr">      protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">      port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">      targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">      nodePort:</span> <span class="number">31187</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">my-tomcat</span></span><br></pre></td></tr></table></figure></p><p>创建tomcat应用和Service<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl apply -f my-tomcat-deployment.yml</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> kubectl apply -f my-tomcat-svc.yml</span></span><br></pre></td></tr></table></figure></p><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>完成上述步骤后，将你的域名解析到任意一台K8S的Node节点机器，即可通过 <a href="http://tomcat.yourdomain.com" target="_blank" rel="noopener">http://tomcat.yourdomain.com</a> 访问k8s上的tomcat服务了。以后，我们可以随时通过kubectl scale 命令扩展成多个tomcat实例，Ingress-Controller(Nginx-Ingress)可以帮我们自动实现负载均衡。</p><blockquote><p>这里主要做实战记录，具体理论知识不做过多介绍，想了解更多，推荐参考如下文档<a href="https://kuboard.cn/learning/k8s-intermediate/service/ingress.html#ingress" target="_blank" rel="noopener">《Ingress通过互联网访问您的应用》</a></p></blockquote>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p79.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>使用kubeAdm搭建K8S集群实战记录</title>
      <link>https://www.xiajunyi.com/pages/p78.html</link>
      <guid>https://www.xiajunyi.com/pages/p78.html</guid>
      <pubDate>Wed, 28 Apr 2021 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p78000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前段时间工作太忙，好久没更新了。最近搞了一项“大工程”，现在想起来觉得自己有点搞笑。因为高配云主机太贵，自己想实验一些大软件或者集群根本搞不起，就突然心血来潮花了2千多大洋买了个N手洋垃圾服务器（32线程CPU、64G内存）。买回来一看，乖乖，这么大、几十斤重，以后搬家真是要老命了!既来之则安之，用它发挥一些作用吧？第一个想法就是自己搭个K8S集群玩玩，毕竟心痒好久了。
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p78000.png" alt="img"><br></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前段时间工作太忙，好久没更新了。最近搞了一项“大工程”，现在想起来觉得自己有点搞笑。因为高配云主机太贵，自己想实验一些大软件或者集群根本搞不起，就突然心血来潮花了2千多大洋买了个N手洋垃圾服务器（32线程CPU、64G内存）。买回来一看，乖乖，这么大、几十斤重，以后搬家真是要老命了!既来之则安之，用它发挥一些作用吧？第一个想法就是自己搭个K8S集群玩玩，毕竟心痒好久了。<a id="more"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>搭建K8S集群的方式很多，我这里主要是使用kubeAdm来搭建的，好处有一个，就是有问题的时候支持kubeadm reset，对于我这样的新手来说非常受用。搭建的步骤很长，怕自己以后忘记了，就在这里仅做个记录和以后的问题查看。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><table><thead><tr><th>VMVare节点名称</th><th>VMVare操作系统</th><th>主机名</th><th>配置</th><th>NAT模式下的IP</th></tr></thead><tbody><tr><td>C1</td><td>Centos 7.7</td><td>master-c1</td><td>8核、16g</td><td>192.168.136.129</td></tr><tr><td>C2</td><td>Centos 7.7</td><td>node-c2</td><td>8核、16g</td><td>192.168.136.130</td></tr><tr><td>C3</td><td>Centos 7.7</td><td>node-c3</td><td>8核、16g</td><td>192.168.136.131</td></tr></tbody></table><h2 id="一、公共安装和配置（所有节点执行）"><a href="#一、公共安装和配置（所有节点执行）" class="headerlink" title="一、公共安装和配置（所有节点执行）"></a>一、公共安装和配置（所有节点执行）</h2><p>如下是3个节点都需要进行的安装和配置步骤,这部分有参考网上文章<a href="https://www.yinxiang.com/everhub/note/f420816c-2019-47a1-8dcd-7b3ade25ac1f" target="_blank" rel="noopener">《Centos7安装K8s》</a></p><h3 id="配置hostname"><a href="#配置hostname" class="headerlink" title="配置hostname"></a>配置hostname</h3><p>设置自己的主机名(例如master节点)<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> hostnamectl <span class="built_in">set</span>-hostname master-c1</span></span><br></pre></td></tr></table></figure></p><p>host映射配置<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/hosts</span></span><br></pre></td></tr></table></figure></p><p>加入如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.136.129 master-c1</span><br><span class="line">192.168.136.130 node-c2</span><br><span class="line">192.168.136.131 node-c3</span><br></pre></td></tr></table></figure></p><h3 id="配置静态IP"><a href="#配置静态IP" class="headerlink" title="配置静态IP"></a>配置静态IP</h3><p>注意每个节点的IPADDR自己设置成不一样的，另外注意的是：VMVare中的系统在NAT模式下的网关IP是x.x.x.2，不是x.x.x.1哦。（这个我吃过亏的）<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br></pre></td></tr></table></figure></p><p>修改或新增如下配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BOOTPROTO=&quot;static&quot;</span><br><span class="line">IPADDR=192.168.136.129 </span><br><span class="line">GATEWAY=192.168.136.2</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">DNS1=114.114.114.114</span><br><span class="line">DNS2=8.8.8.8</span><br></pre></td></tr></table></figure></p><p>重启网络<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> service network restart</span></span><br></pre></td></tr></table></figure></p><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> systemctl stop firewalld</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> systemctl <span class="built_in">disable</span> firewalld</span></span><br></pre></td></tr></table></figure><h3 id="关闭Selinux"><a href="#关闭Selinux" class="headerlink" title="关闭Selinux"></a>关闭Selinux</h3><ul><li>临时关闭</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> setenforce 0</span></span><br></pre></td></tr></table></figure><ul><li>永久关闭</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> sed -i <span class="string">'s/SELINUX=permissive/SELINUX=disabled/'</span> /etc/sysconfig/selinux</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sed -i <span class="string">"s/SELINUX=enforcing/SELINUX=disabled/g"</span> /etc/selinux/config</span></span><br></pre></td></tr></table></figure><h3 id="禁用交换分区"><a href="#禁用交换分区" class="headerlink" title="禁用交换分区"></a>禁用交换分区</h3><ul><li>临时禁用</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> swapoff -a</span></span><br></pre></td></tr></table></figure><ul><li>永久禁用（打开/etc/fstab注释掉swap那一行）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> sed -i <span class="string">'s/.*swap.*/#&amp;/'</span> /etc/fstab</span></span><br></pre></td></tr></table></figure><h3 id="修改内核参数"><a href="#修改内核参数" class="headerlink" title="修改内核参数"></a>修改内核参数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf</span></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line"><span class="meta">#</span><span class="bash"> sysctl --system</span></span><br></pre></td></tr></table></figure><h2 id="二、Master节点相关安装"><a href="#二、Master节点相关安装" class="headerlink" title="二、Master节点相关安装"></a>二、Master节点相关安装</h2><h3 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h3><p>由于官方k8s源在google，这里使用阿里云yum源<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p><h3 id="安装kubeadm、kubectl、kubelet"><a href="#安装kubeadm、kubectl、kubelet" class="headerlink" title="安装kubeadm、kubectl、kubelet"></a>安装kubeadm、kubectl、kubelet</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum install -y kubectl kubeadm kubelet</span></span><br></pre></td></tr></table></figure><h3 id="启动kubelet"><a href="#启动kubelet" class="headerlink" title="启动kubelet"></a>启动kubelet</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> systemctl <span class="built_in">enable</span> kubelet &amp;&amp; systemctl start kubelet</span></span><br></pre></td></tr></table></figure><h3 id="使用kubeAdm进行配置初始化"><a href="#使用kubeAdm进行配置初始化" class="headerlink" title="使用kubeAdm进行配置初始化"></a>使用kubeAdm进行配置初始化</h3><p>注意这里的第一个ip要改成自己主机的ip,我之前直接复制的网上的，结果出了一大堆莫名其妙的问题。(如果遇到问题需要重置，可以执行：kubeadm reset)<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubeadm init \</span></span><br><span class="line">--apiserver-advertise-address=192.168.136.129 \</span><br><span class="line">--image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">--service-cidr=10.1.0.0/16 \</span><br><span class="line">--pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure></p><p>安装成功后会输出”Then you can join any number of worker nodes by running the following on each as root: kubeadm join …”的语句，后续在node节点中执行这个kubeadm join语句，即可加入到集群中。</p><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><p>由于不同仓库里的镜像命名不一定规范，比如有的版本是V1，有的直接是1，这时候就会报找不到镜像的错误，我的解决方法是下载其他仓库的镜像，重命名成脚本需要的镜像名称。比如我的报找不到coredns/coredns:v1.8.0镜像，我的解决方法如下：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubeadm reset</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker pull coredns/coredns:1.8.0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker tag 296a6d5035e2 registry.aliyuncs.com/google_containers/coredns/coredns:v1.8.0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> kubeadm init --apiserver-advertise-address=192.168.136.129 --image-repository registry.aliyuncs.com/google_containers --service-cidr=10.1.0.0/16 --pod-network-cidr=10.244.0.0/16</span></span><br></pre></td></tr></table></figure></p><h3 id="安装flannel"><a href="#安装flannel" class="headerlink" title="安装flannel"></a>安装flannel</h3><p>忘了从哪里下载的kube-flannel.yml文件了，直接把内容放下面吧,虽然很长，但省得再去翻墙下载了。注意这里配置的ip要和上一节kubeadm init时的-pod-network-cidr参数的ip一致。<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">policy/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PodSecurityPolicy</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">psp.flannel.unprivileged</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">seccomp.security.alpha.kubernetes.io/allowedProfileNames:</span> <span class="string">docker/default</span></span><br><span class="line">    <span class="string">seccomp.security.alpha.kubernetes.io/defaultProfileName:</span> <span class="string">docker/default</span></span><br><span class="line">    <span class="string">apparmor.security.beta.kubernetes.io/allowedProfileNames:</span> <span class="string">runtime/default</span></span><br><span class="line">    <span class="string">apparmor.security.beta.kubernetes.io/defaultProfileName:</span> <span class="string">runtime/default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  privileged:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  volumes:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">configMap</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">secret</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">emptyDir</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">hostPath</span></span><br><span class="line"><span class="attr">  allowedHostPaths:</span></span><br><span class="line"><span class="attr">  - pathPrefix:</span> <span class="string">"/etc/cni/net.d"</span></span><br><span class="line"><span class="attr">  - pathPrefix:</span> <span class="string">"/etc/kube-flannel"</span></span><br><span class="line"><span class="attr">  - pathPrefix:</span> <span class="string">"/run/flannel"</span></span><br><span class="line"><span class="attr">  readOnlyRootFilesystem:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Users and groups</span></span><br><span class="line"><span class="attr">  runAsUser:</span></span><br><span class="line"><span class="attr">    rule:</span> <span class="string">RunAsAny</span></span><br><span class="line"><span class="attr">  supplementalGroups:</span></span><br><span class="line"><span class="attr">    rule:</span> <span class="string">RunAsAny</span></span><br><span class="line"><span class="attr">  fsGroup:</span></span><br><span class="line"><span class="attr">    rule:</span> <span class="string">RunAsAny</span></span><br><span class="line">  <span class="comment"># Privilege Escalation</span></span><br><span class="line"><span class="attr">  allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  defaultAllowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Capabilities</span></span><br><span class="line"><span class="attr">  allowedCapabilities:</span> <span class="string">['NET_ADMIN',</span> <span class="string">'NET_RAW'</span><span class="string">]</span></span><br><span class="line"><span class="attr">  defaultAddCapabilities:</span> <span class="string">[]</span></span><br><span class="line"><span class="attr">  requiredDropCapabilities:</span> <span class="string">[]</span></span><br><span class="line">  <span class="comment"># Host namespaces</span></span><br><span class="line"><span class="attr">  hostPID:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  hostIPC:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  hostNetwork:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  hostPorts:</span></span><br><span class="line"><span class="attr">  - min:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">    max:</span> <span class="number">65535</span></span><br><span class="line">  <span class="comment"># SELinux</span></span><br><span class="line"><span class="attr">  seLinux:</span></span><br><span class="line">    <span class="comment"># SELinux is unused in CaaSP</span></span><br><span class="line"><span class="attr">    rule:</span> <span class="string">'RunAsAny'</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">- apiGroups:</span> <span class="string">['extensions']</span></span><br><span class="line"><span class="attr">  resources:</span> <span class="string">['podsecuritypolicies']</span></span><br><span class="line"><span class="attr">  verbs:</span> <span class="string">['use']</span></span><br><span class="line"><span class="attr">  resourceNames:</span> <span class="string">['psp.flannel.unprivileged']</span></span><br><span class="line"><span class="attr">- apiGroups:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">pods</span></span><br><span class="line"><span class="attr">  verbs:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">get</span></span><br><span class="line"><span class="attr">- apiGroups:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">nodes</span></span><br><span class="line"><span class="attr">  verbs:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">list</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">watch</span></span><br><span class="line"><span class="attr">- apiGroups:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">nodes/status</span></span><br><span class="line"><span class="attr">  verbs:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">patch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">- kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kube-flannel-cfg</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    tier:</span> <span class="string">node</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="string">cni-conf.json:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      "name": "cbr0",</span></span><br><span class="line"><span class="string">      "cniVersion": "0.3.1",</span></span><br><span class="line"><span class="string">      "plugins": [</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">          "type": "flannel",</span></span><br><span class="line"><span class="string">          "delegate": &#123;</span></span><br><span class="line"><span class="string">            "hairpinMode": true,</span></span><br><span class="line"><span class="string">            "isDefaultGateway": true</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">          "type": "portmap",</span></span><br><span class="line"><span class="string">          "capabilities": &#123;</span></span><br><span class="line"><span class="string">            "portMappings": true</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      ]</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  net-conf.json: |</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      "Network": "10.244.0.0/16",</span></span><br><span class="line"><span class="string">      "Backend": &#123;</span></span><br><span class="line"><span class="string">        "Type": "vxlan"</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string"></span><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kube-flannel-ds</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    tier:</span> <span class="string">node</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        tier:</span> <span class="string">node</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      affinity:</span></span><br><span class="line"><span class="attr">        nodeAffinity:</span></span><br><span class="line"><span class="attr">          requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line"><span class="attr">            nodeSelectorTerms:</span></span><br><span class="line"><span class="attr">            - matchExpressions:</span></span><br><span class="line"><span class="attr">              - key:</span> <span class="string">kubernetes.io/os</span></span><br><span class="line"><span class="attr">                operator:</span> <span class="string">In</span></span><br><span class="line"><span class="attr">                values:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">linux</span></span><br><span class="line"><span class="attr">      hostNetwork:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      priorityClassName:</span> <span class="string">system-node-critical</span></span><br><span class="line"><span class="attr">      tolerations:</span></span><br><span class="line"><span class="attr">      - operator:</span> <span class="string">Exists</span></span><br><span class="line"><span class="attr">        effect:</span> <span class="string">NoSchedule</span></span><br><span class="line"><span class="attr">      serviceAccountName:</span> <span class="string">flannel</span></span><br><span class="line"><span class="attr">      initContainers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">install-cni</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">quay.io/coreos/flannel:v0.14.0-rc1</span></span><br><span class="line"><span class="attr">        command:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">cp</span></span><br><span class="line"><span class="attr">        args:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="bullet">-f</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/etc/kube-flannel/cni-conf.json</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/etc/cni/net.d/10-flannel.conflist</span></span><br><span class="line"><span class="attr">        volumeMounts:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">cni</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">flannel-cfg</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">kube-flannel</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">quay.io/coreos/flannel:v0.14.0-rc1</span></span><br><span class="line"><span class="attr">        command:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">/opt/bin/flanneld</span></span><br><span class="line"><span class="attr">        args:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="bullet">--ip-masq</span></span><br><span class="line"><span class="bullet">        -</span> <span class="bullet">--kube-subnet-mgr</span></span><br><span class="line"><span class="attr">        resources:</span></span><br><span class="line"><span class="attr">          requests:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="string">"100m"</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="string">"50Mi"</span></span><br><span class="line"><span class="attr">          limits:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="string">"100m"</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="string">"50Mi"</span></span><br><span class="line"><span class="attr">        securityContext:</span></span><br><span class="line"><span class="attr">          privileged:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">          capabilities:</span></span><br><span class="line"><span class="attr">            add:</span> <span class="string">["NET_ADMIN",</span> <span class="string">"NET_RAW"</span><span class="string">]</span></span><br><span class="line"><span class="attr">        env:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">POD_NAME</span></span><br><span class="line"><span class="attr">          valueFrom:</span></span><br><span class="line"><span class="attr">            fieldRef:</span></span><br><span class="line"><span class="attr">              fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line"><span class="attr">          valueFrom:</span></span><br><span class="line"><span class="attr">            fieldRef:</span></span><br><span class="line"><span class="attr">              fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line"><span class="attr">        volumeMounts:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">run</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/run/flannel</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">flannel-cfg</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/etc/kube-flannel/</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">run</span></span><br><span class="line"><span class="attr">        hostPath:</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">/run/flannel</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">cni</span></span><br><span class="line"><span class="attr">        hostPath:</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">/etc/cni/net.d</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">flannel-cfg</span></span><br><span class="line"><span class="attr">        configMap:</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">kube-flannel-cfg</span></span><br></pre></td></tr></table></figure></p><p>执行部署：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl apply -f kube-flannel.yml</span></span><br></pre></td></tr></table></figure></p><h2 id="三、Node节点相关安装"><a href="#三、Node节点相关安装" class="headerlink" title="三、Node节点相关安装"></a>三、Node节点相关安装</h2><h3 id="配置yum源-1"><a href="#配置yum源-1" class="headerlink" title="配置yum源"></a>配置yum源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="安装kubeadm、kubectl、kubelet-1"><a href="#安装kubeadm、kubectl、kubelet-1" class="headerlink" title="安装kubeadm、kubectl、kubelet"></a>安装kubeadm、kubectl、kubelet</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum install -y kubectl kubeadm kubelet</span></span><br></pre></td></tr></table></figure><h3 id="启动kubelet服务"><a href="#启动kubelet服务" class="headerlink" title="启动kubelet服务"></a>启动kubelet服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> systemctl <span class="built_in">enable</span> kubelet &amp;&amp; systemctl start kubelet</span></span><br></pre></td></tr></table></figure><h3 id="加入集群"><a href="#加入集群" class="headerlink" title="加入集群"></a>加入集群</h3><p>使用master节点输出的kubeadm join语句即可加入到K8S集群中，如果当时没保存，可以登录master节点，使用kubeadm token create –print-join-command来重新获取。</p><h3 id="可能遇到的问题-1"><a href="#可能遇到的问题-1" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><p>在执行kubectl命令时如果遇到无法连接8080端口的问题，需要将master节点配置复制到node节点,注意替换节点的主机名：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> scp -r /etc/kubernetes/admin.conf node-c2:/etc/kubernetes/admin.conf</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"export KUBECONFIG=/etc/kubernetes/admin.conf"</span> &gt;&gt; /etc/profile</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">source</span> /etc/profile</span></span><br></pre></td></tr></table></figure></p><h2 id="四、Dashboard-UI相关"><a href="#四、Dashboard-UI相关" class="headerlink" title="四、Dashboard UI相关"></a>四、Dashboard UI相关</h2><p>这一块当时安装的有些乱，虽然最后安装好了，但步骤不一定正规，所以这里暂时不放安装步骤了，只记录几个重要点。</p><ul><li>如果需要对外的端口能够访问，需要设置NodePort类型的端口映射：</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">NodePort</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">    - port:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">      targetPort:</span> <span class="number">8443</span></span><br><span class="line"><span class="attr">      nodePort:</span> <span class="number">31443</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br></pre></td></tr></table></figure><ul><li>获取Dashboard的token</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk <span class="string">'&#123;print $1&#125;'</span>)</span></span><br></pre></td></tr></table></figure><h2 id="五、效果展示"><a href="#五、效果展示" class="headerlink" title="五、效果展示"></a>五、效果展示</h2><p>因为没有有效的https证书,用谷歌浏览器是禁止访问的，可以选择用火狐浏览器输入token进行访问，效果如下：<br><img src="/img/xjy/p78001.png" alt="img"><br><br><img src="/img/xjy/p78002.png" alt="img"><br><br>后面除了使用kubectl命令，还可以根据用管理界面进行应用的配置和管理了。</p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>搭建K8S很费事，中间也遇到了很多问题，都要查资料以及不断尝试解决。除此之外，在服务器应用及虚拟机方面也遇到了一些问题，也小记一下：</p><blockquote><p>1、在操作服务器问题上，也遇到了一些问题，主要在于服务器远程启动上。关于远程启动，我尝试了好多方法都不是太智能，最后发现最简单的莫过于二十块钱买一个天猫精灵远程开关，加上服务器上安装向日葵客户端（免费版的软件，开机棒还是感觉有点贵就没买，能省则省，哈哈）设成开机启动，然后在服务器BIOS中设置成系统断电重启搞定。</p><p>2、对于虚拟机里的应用映射到外网，我还是选择的frp内网穿透方案，运用阿里云服务器当外网代理，实现多个应用的对外映射。同时还要提到经常用的cloudflare的DNS代理，对于HTTPS代理非常方便，不需要再申请证书了。</p></blockquote><p>3、小插曲：为了实现我的实验数据定期备份（毕竟二手服务器的硬盘不一定什么时候就挂了），我决定写个脚本定期往我的NAS服务器上备份现在这台服务器的部分应用数据。然而，发现同一个路由器上有线传输却不超过10M/s，在排查了各个网口包括路由器插口都是千兆网口后，才觉醒我连接服务器的网线只是普通的4类网线。最后花了十块钱买根5类千兆网线搞定。</p><p>后面要好好学习K8S的知识，然后基于这个集群再体验部署应用的过程吧。进步很慢，一直在路上。</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p78.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Spring Cloud Gateway配置记录1</title>
      <link>https://www.xiajunyi.com/pages/p76.html</link>
      <guid>https://www.xiajunyi.com/pages/p76.html</guid>
      <pubDate>Fri, 26 Feb 2021 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p76000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;本人在工作中用到Spring Cloud Gateway作为网关服务为公司提供服务，它具体的优点有：集成了Netty,实现了非阻塞式的请求转发处理，采用WebFlux架构风格，有完善的各类内置filter，方便扩展和动态配置。以后会记录常用的一些配置，这一期记录的是简单的搭建和一个集转发、重写、限流、熔断的路由配置规则示例：
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p76000.png" alt="img"><br></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本人在工作中用到Spring Cloud Gateway作为网关服务为公司提供服务，它具体的优点有：集成了Netty,实现了非阻塞式的请求转发处理，采用WebFlux架构风格，有完善的各类内置filter，方便扩展和动态配置。以后会记录常用的一些配置，这一期记录的是简单的搭建和一个集转发、重写、限流、熔断的路由配置规则示例：<a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>Idea2019</li><li>Jdk1.8</li><li>Maven3.6.3</li></ul><h2 id="简单搭建"><a href="#简单搭建" class="headerlink" title="简单搭建"></a>简单搭建</h2><p>首先要搭建一个Spring Cloud Gateway服务。</p><h3 id="pom依赖配置"><a href="#pom依赖配置" class="headerlink" title="pom依赖配置"></a>pom依赖配置</h3><p>因为我的Gateway配置是在redis中的所以引入了Gateway和Redis如下依赖：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--gateway 网关依赖,内置webflux 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--redis依赖，为了读取路由配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis-reactive<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h3><p>指定对外端口号，并加上了Hystrix超时配置<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8090</span></span><br><span class="line"><span class="attr">hystrix:</span></span><br><span class="line"><span class="attr">  command:</span></span><br><span class="line"><span class="attr">    default:</span></span><br><span class="line"><span class="attr">      execution:</span></span><br><span class="line"><span class="attr">        isolation:</span></span><br><span class="line"><span class="attr">          strategy:</span> <span class="string">SEMAPHORE</span></span><br><span class="line"><span class="attr">          thread:</span></span><br><span class="line"><span class="attr">            timeoutInMilliseconds:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></p><h3 id="启动类代码"><a href="#启动类代码" class="headerlink" title="启动类代码"></a>启动类代码</h3><p>启动类中加入@EnableCircuitBreaker注解以启用Hystrix<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableCircuitBreaker</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppserverGatewayBaseApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(AppserverGatewayBaseApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="改为Redis读取路由规则"><a href="#改为Redis读取路由规则" class="headerlink" title="改为Redis读取路由规则"></a>改为Redis读取路由规则</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * redis 保存路由信息，优先级比配置文件高</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisRouteDefinitionWriter</span> <span class="keyword">implements</span> <span class="title">RouteDefinitionRepository</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 动态路由入口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Flux&lt;RouteDefinition&gt; <span class="title">getRouteDefinitions</span><span class="params">()</span> </span>&#123;</span><br><span class="line">redisTemplate.setKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">redisTemplate.setHashValueSerializer(<span class="keyword">new</span> Jackson2JsonRedisSerializer&lt;&gt;(RouteDefinitionVo.class));</span><br><span class="line">List&lt;RouteDefinitionVo&gt; values = redisTemplate.opsForHash().values(CommonConstants.ROUTE_KEY_TOBASE);</span><br><span class="line">List&lt;RouteDefinition&gt; definitionList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">values.forEach(vo -&gt; &#123;</span><br><span class="line">RouteDefinition routeDefinition = <span class="keyword">new</span> RouteDefinition();</span><br><span class="line">BeanUtils.copyProperties(vo, routeDefinition);</span><br><span class="line">definitionList.add(vo);</span><br><span class="line">&#125;);</span><br><span class="line">log.debug(<span class="string">"redis 中路由定义条数： &#123;&#125;， &#123;&#125;"</span>, definitionList.size(), definitionList);</span><br><span class="line"><span class="keyword">return</span> Flux.fromIterable(definitionList);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置记录"><a href="#配置记录" class="headerlink" title="配置记录"></a>配置记录</h2><p>如下是一个带有转发、限流、熔断、重写路径的配置，将网关的/xxx-api/Account/Login2路径转发的下游服务的/xxx-api/Account/Login路径去，并实现了限流和熔断。<br>url:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 转发到的子服务</span><br><span class="line">http://子服务名:端口</span><br></pre></td></tr></table></figure></p><p>predicates:<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"args"</span>: &#123;</span><br><span class="line">            <span class="attr">"_genkey_0"</span>: <span class="string">"/xxx-api/Account/Login2/**"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"Path"</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>filters:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;// 限流配置</span><br><span class="line">        "args": &#123;</span><br><span class="line">            "key-resolver": "#&#123;@remoteAddrKeyResolver&#125;",</span><br><span class="line">            "redis-rate-limiter.burstCapacity": "3",</span><br><span class="line">            "redis-rate-limiter.replenishRate": "3"</span><br><span class="line">        &#125;,</span><br><span class="line">        "name": "RequestRateLimiter"</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;// 重写路径配置</span><br><span class="line">        "args": &#123;</span><br><span class="line">            "regexp": "/Account/Login2",</span><br><span class="line">            "replacement": "/Account/Login"</span><br><span class="line">        &#125;,</span><br><span class="line">        "name": "RewritePath"</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;// 熔断处理配置</span><br><span class="line">        "args": &#123;</span><br><span class="line">            "name": "default",</span><br><span class="line">            "fallbackUri": "forward:/fallback"</span><br><span class="line">        &#125;,</span><br><span class="line">        "name": "Hystrix"</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><ul><li>加上限流后，被限制的返回如下：<br><img src="/img/xjy/p76001.png" alt="img"></li><li>超时熔断后会走/fallback的返回，这里可以自定义返回数据</li></ul><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>本文仅做核心配置的记录，由于其他跨域鉴权等设计的代码涉及太多，就没有一一列出，扩展可参考：<a href="https://blog.51cto.com/zero01/2430424" target="_blank" rel="noopener">《第二代微服务网关组件 - Spring Cloud Gateway》</a>、<a href="https://www.throwable.club/2019/05/25/spring-cloud-gateway-hystrix" target="_blank" rel="noopener">《Spring Cloud Gateway-使用自定义过滤器通过Hystrix实现降级处理》</a></p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p76.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>SpringBoot实战记录8:实现MyBatis多数据源操作</title>
      <link>https://www.xiajunyi.com/pages/p77.html</link>
      <guid>https://www.xiajunyi.com/pages/p77.html</guid>
      <pubDate>Fri, 26 Feb 2021 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p77000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;经常遇到这种情况，某个应用Mybatis本身连接的1个Mysql数据源，这时候有需求要操作另外一个Mysql数据库的表，那么如何更方便的实现呢？我在SpringBoot项目中实战了一下。
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p77000.png" alt="img"><br></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>经常遇到这种情况，某个应用Mybatis本身连接的1个Mysql数据源，这时候有需求要操作另外一个Mysql数据库的表，那么如何更方便的实现呢？我在SpringBoot项目中实战了一下。<a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>Idea2019</li><li>Jdk1.8</li><li>Maven3.6.3</li></ul><h2 id="集成配置"><a href="#集成配置" class="headerlink" title="集成配置"></a>集成配置</h2><p>SpringBoot项目和MyBatis的集成就不多说了，可以<a href="https://www.xiajunyi.com/pages/p68.html#more">《SpringBoot实战记录1:集成Mybatis》</a>，如下是动态数据源的配置</p><h3 id="pom依赖配置"><a href="#pom依赖配置" class="headerlink" title="pom依赖配置"></a>pom依赖配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h3><p>配置一个默认主数据源master和一个次数据源slave_1，更多个依次类推<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span> </span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    dynamic:</span></span><br><span class="line"><span class="attr">      primary:</span> <span class="string">master</span> <span class="comment">#设置默认的数据源或者数据源组,默认值即为master</span></span><br><span class="line"><span class="attr">      strict:</span> <span class="literal">true</span> <span class="comment">#设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候会抛出异常,不启动则使用默认数据源.</span></span><br><span class="line"><span class="attr">      datasource:</span></span><br><span class="line"><span class="attr">        master:</span></span><br><span class="line"><span class="attr">          type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line"><span class="attr">          driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">          username:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">          password:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">          url:</span> <span class="attr">jdbc:mysql://xxx1:3306/xxxdb1?characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=GMT%2B8</span></span><br><span class="line"><span class="attr">        slave_1:</span></span><br><span class="line"><span class="attr">          type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line"><span class="attr">          driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">          username:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">          password:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">          url:</span> <span class="attr">jdbc:mysql://xxx2:3306/xxxdb2?characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=GMT%2B8</span></span><br></pre></td></tr></table></figure></p><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p>建议在Service类和方法上使用@DS注解，当类和方法中同时存在@DS注解时，以方法上的为准，具体说明可参考：<a href="https://mp.baomidou.com/guide/dynamic-datasource.html#%E6%96%87%E6%A1%A3-documentation" target="_blank" rel="noopener">《一个基于springboot的快速集成多数据源的启动器》</a>，<br>如下为示例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">UserMapper</span>, <span class="title">User</span>&gt; <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 会走master</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@DS</span>(<span class="string">"master"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">m1</span><span class="params">(Map&lt;String,String&gt; param)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> R.success(selectTemp(param.get(<span class="string">"name"</span>)), <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 会走slave_1</span></span><br><span class="line">    <span class="meta">@DS</span>(<span class="string">"slave_1"</span>)</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">m2</span><span class="params">(Map&lt;String, String&gt; param)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> R.success(selectTemp(param.get(<span class="string">"name"</span>)), <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 默认会走master</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">m3</span><span class="params">(Map&lt;String, String&gt; param)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> R.success(selectTemp(param.get(<span class="string">"name"</span>)), <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> Object <span class="title">selectTemp</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        PasRecordInfo info = <span class="keyword">this</span>.getOne(<span class="keyword">new</span> QueryWrapper&lt;User&gt;().eq(<span class="string">"name"</span>, name));</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>测试发现：</p><ul><li>调用上述m1、m2、m3三个方法分别走到了上述备注中的数据源。</li><li>当整个Service类上加上了@DS(“slave_1”)，那么没有注解的方法会走slave_1数据源。</li></ul><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>只为记录点滴成长，加油！</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p77.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>SpringBoot实战记录7:集成Actuator和Admin实现健康性能监测</title>
      <link>https://www.xiajunyi.com/pages/p75.html</link>
      <guid>https://www.xiajunyi.com/pages/p75.html</guid>
      <pubDate>Fri, 05 Feb 2021 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p75000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;在微服务环境中除了需要分布式追踪的功能，其实基础的健康性能检测同样很重要，不同于在物理服务器中的部署，很多容器部署情况下，执行jmap、jstack这些命令就没有那么便捷。我们可以借助Spring Boot Actuator提供的Restful接口和Spring Boot Admin服务来提供可视化健康性能检测功能。下面是实战记录：
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p75000.png" alt="img"><br></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在微服务环境中除了需要分布式追踪的功能，其实基础的健康性能检测同样很重要，不同于在物理服务器中的部署，很多容器部署情况下，执行jmap、jstack这些命令就没有那么便捷。我们可以借助Spring Boot Actuator提供的Restful接口和Spring Boot Admin服务来提供可视化健康性能检测功能。下面是实战记录：<a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>Idea2019</li><li>Jdk1.8</li><li>Maven3.6.3</li></ul><h2 id="SpringBootAdmin服务端"><a href="#SpringBootAdmin服务端" class="headerlink" title="SpringBootAdmin服务端"></a>SpringBootAdmin服务端</h2><p>首先要有一个单独的服务用来作为SpringBootAdmin服务端</p><h3 id="pom依赖配置"><a href="#pom依赖配置" class="headerlink" title="pom依赖配置"></a>pom依赖配置</h3><p>引入如下依赖：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>de.codecentric<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-admin-starter-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h3><p>正常指定端口号就可以<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">9999</span></span><br><span class="line"><span class="attr">  servlet:</span></span><br><span class="line"><span class="attr">    context-path:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure></p><h3 id="SpringBoot启动类代码"><a href="#SpringBoot启动类代码" class="headerlink" title="SpringBoot启动类代码"></a>SpringBoot启动类代码</h3><p>启动类中加入@EnableAdminServer注解<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * springboot启动类</span><br><span class="line"> */</span><br><span class="line">@SpringBootApplication(scanBasePackages = &#123;</span><br><span class="line">        &quot;com.xjy.world&quot;&#125;)</span><br><span class="line">@EnableAdminServer</span><br><span class="line">public class AdminServerApplication &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(AdminServerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="启动看效果"><a href="#启动看效果" class="headerlink" title="启动看效果"></a>启动看效果</h3><p>运行后访问<a href="http://locahost:9999，效果如下：" target="_blank" rel="noopener">http://locahost:9999，效果如下：</a><br><img src="/img/xjy/p75001.png" alt="img"></p><h2 id="SpringBoot子服务端集成"><a href="#SpringBoot子服务端集成" class="headerlink" title="SpringBoot子服务端集成"></a>SpringBoot子服务端集成</h2><p>各SpringBoot子服务需集成Actuator和Admin客户端</p><h3 id="pom依赖配置-1"><a href="#pom依赖配置-1" class="headerlink" title="pom依赖配置"></a>pom依赖配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--actuator--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--监控客户端--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>de.codecentric<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-admin-starter-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="application-yml配置-1"><a href="#application-yml配置-1" class="headerlink" title="application.yml配置"></a>application.yml配置</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 端口和主路径</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8082</span></span><br><span class="line"><span class="attr">  servlet:</span></span><br><span class="line"><span class="attr">    context-path:</span> <span class="string">/</span></span><br><span class="line"><span class="comment"># admin-client配置</span></span><br><span class="line"><span class="attr">spring:</span>  </span><br><span class="line"><span class="attr">  boot:</span></span><br><span class="line"><span class="attr">    admin:</span></span><br><span class="line"><span class="attr">      client:</span></span><br><span class="line"><span class="attr">        url:</span> <span class="attr">http://localhost:9999/</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">xjy-world-actuator</span></span><br><span class="line"><span class="comment"># actuator配置</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line"><span class="attr">  endpoints:</span></span><br><span class="line"><span class="attr">    web:</span></span><br><span class="line"><span class="attr">      base-path:</span> <span class="string">/monitor</span></span><br><span class="line"><span class="attr">      exposure:</span></span><br><span class="line"><span class="attr">        include:</span> <span class="string">'*'</span></span><br></pre></td></tr></table></figure><h3 id="运行看效果"><a href="#运行看效果" class="headerlink" title="运行看效果"></a>运行看效果</h3><p>运行后再访问原来admin服务端的地址<a href="http://localhost:9999" target="_blank" rel="noopener">http://localhost:9999</a><br><img src="/img/xjy/p75002.png" alt="img"></p><p>点击查看自服务的详情<br><img src="/img/xjy/p75003.png" alt="img"></p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>整个健康和性能系统检测搭建起来了，其他的功能和使用方法可参考：<br><a href="http://www.ityouknow.com/springboot/2018/02/06/spring-boot-actuator.html" target="_blank" rel="noopener">【使用 Spring Boot Actuator 监控应用】</a>、<a href="http://www.ityouknow.com/springboot/2018/02/11/spring-boot-admin.html" target="_blank" rel="noopener">【使用 spring-boot-admin 对 Spring Boot 服务进行监控】</a></p><h2 id="下期预告"><a href="#下期预告" class="headerlink" title="下期预告"></a>下期预告</h2><p>之前实战了Slueth和Zipkin用于分布式追踪，这一期又实战了Actuator和Admin进行健康和性能检测，下一期准备实战一个利用java-agent实现无代码侵入的APM工具：Apache SkyWalking，它同时拥有上述两种功能，同时新版本还扩展了日志集成功能，之前的使用感觉是界面效果和舒适度要比这两个要好的多。今天是年前最后一天班了，预知下期效果如何，来年见分晓。</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p75.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>SpringBoot实战记录6:集成Slueth和Zipkin实现分布式追踪</title>
      <link>https://www.xiajunyi.com/pages/p74.html</link>
      <guid>https://www.xiajunyi.com/pages/p74.html</guid>
      <pubDate>Tue, 02 Feb 2021 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p74000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;在微服务环境中经常需要排查系统之间调用哪个环节出问题了，如果有了追踪记录则排查起来就更加方便。这一期记录一下在SpringBoot中集成Slueth和Zipkin，推送至Zipkin服务端，并利用切面实现自定义Tag，尝试扩展追踪记录中的信息。
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p74000.png" alt="img"><br></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在微服务环境中经常需要排查系统之间调用哪个环节出问题了，如果有了追踪记录则排查起来就更加方便。这一期记录一下在SpringBoot中集成Slueth和Zipkin，推送至Zipkin服务端，并利用切面实现自定义Tag，尝试扩展追踪记录中的信息。<a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>Idea2019</li><li>Jdk1.8</li><li>Maven3.6.3</li><li>CentOs7</li></ul><h2 id="搭建zipkin服务端"><a href="#搭建zipkin服务端" class="headerlink" title="搭建zipkin服务端"></a>搭建zipkin服务端</h2><h3 id="建立初始数据表"><a href="#建立初始数据表" class="headerlink" title="建立初始数据表"></a>建立初始数据表</h3><p>如果采用其他类型数据存储的这一步可忽略，本人限于服务器内存太小，没有跑ES,所以用的是mysql存储。在自己的mysql数据库中执行初始脚本即可：<a href="https://github.com/openzipkin/zipkin/tree/master/zipkin-storage/mysql-v1/src/main/resources" target="_blank" rel="noopener">源sql下载请点这里。</a></p><h3 id="docker-compose配置"><a href="#docker-compose配置" class="headerlink" title="docker-compose配置"></a>docker-compose配置</h3><p>我这里zipkin服务端采用docker部署，如下是docker-compose配置：xjy-zipkin.yml。<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"2"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  nacos:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">openzipkin/zipkin</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">xjy-zipkin</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"9411:9411"</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">STORAGE_TYPE=mysql</span></span><br><span class="line">      <span class="comment"># Point the zipkin at the storage backend</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">MYSQL_DB=zipkin</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">MYSQL_USER=123</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">MYSQL_PASS=456</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">MYSQL_HOST=your-mysql</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">MYSQL_TCP_PORT=3306</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">xjynet</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  xjynet:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h3 id="启动一下看效果"><a href="#启动一下看效果" class="headerlink" title="启动一下看效果"></a>启动一下看效果</h3><p>启动命令<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f xjy-zipkin.yml up -d</span><br></pre></td></tr></table></figure></p><p>访问http://你的域名:9411，看效果如下：<br><img src="/img/xjy/p74001.png" alt="img"></p><h2 id="项目中集成Slueth和ZipKin"><a href="#项目中集成Slueth和ZipKin" class="headerlink" title="项目中集成Slueth和ZipKin"></a>项目中集成Slueth和ZipKin</h2><h3 id="pom参数"><a href="#pom参数" class="headerlink" title="pom参数"></a>pom参数</h3><p>pom文件中增加如下两个依赖：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-sleuth<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zipkin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h3><p>相关配置如下：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span> </span><br><span class="line"><span class="attr">  zipkin:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    baseUrl:</span> <span class="attr">http://你的域名:9411</span> <span class="comment"># 服务端的地址</span></span><br><span class="line"><span class="attr">    sleuth:</span></span><br><span class="line"><span class="attr">      sampler:</span></span><br><span class="line"><span class="attr">        percentage:</span> <span class="number">1</span> <span class="comment"># 采样率，当前测试是百分之百，线上需按照性能调整</span></span><br></pre></td></tr></table></figure></p><h3 id="启动看效果"><a href="#启动看效果" class="headerlink" title="启动看效果"></a>启动看效果</h3><p>运行springboot项目，然后访问任一个restful接口，即可查看到追踪记录。<br><img src="/img/xjy/p74002.png" alt="img"></p><h2 id="利用切面实现自定义Tag"><a href="#利用切面实现自定义Tag" class="headerlink" title="利用切面实现自定义Tag"></a>利用切面实现自定义Tag</h2><h3 id="编写切面类"><a href="#编写切面类" class="headerlink" title="编写切面类"></a>编写切面类</h3><p>下面以记录所有Controller的返回结果为例，切面类代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xjy.world.seconLevel.zipkin.aspect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> brave.Span;</span><br><span class="line"><span class="keyword">import</span> brave.Tracer;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty</span>(value = <span class="string">"spring.sleuth.enabled"</span>, matchIfMissing = <span class="keyword">false</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TracerServiceAspect</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"execution(public * com.xjy.world.seconLevel.zipkin.controller..*.*(..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">tracerLog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 全局的trace对象</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    Tracer tracer;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 针对所有Controller层的方法的切面</span></span><br><span class="line">    <span class="meta">@Around</span>(<span class="string">"tracerLog()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">doSurround</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        Span currentSpan = tracer.currentSpan();</span><br><span class="line">        <span class="comment">// 方法的执行结果</span></span><br><span class="line">        Object result = proceedingJoinPoint.proceed();</span><br><span class="line">        currentSpan.tag(<span class="string">"controller返回结果"</span>, JSONObject.toJSONString(result));</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="重启查看效果"><a href="#重启查看效果" class="headerlink" title="重启查看效果"></a>重启查看效果</h3><p>重启springboot项目，再请求任一restful接口，搜索追踪记录后点击SHOW查看详情，发现自定义的Tag信息已被记录：<br><img src="/img/xjy/p74003.png" alt="img"></p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>服务追踪当然不是为只追踪单个应用，想看多个系统之间的调用关联信息，在各个springboot项目中都配置一下就好了，它们之间会通过追踪ID和父ID等信息关联，这里不在一一列举。探索更多用法可以推荐两篇参考文章:<a href="https://blog.btstream.net/post/2019-01-14-spring-cloud-sleuth-2.0%E6%A6%82%E8%A6%81%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/" target="_blank" rel="noopener">《Spring Cloud Sleuth 2.0概要使用说明》</a>和<a href="https://www.dazhuanlan.com/2019/10/11/5da08f2d75b90/" target="_blank" rel="noopener">《追踪工具Sleuth》。</a></p><h2 id="下期预告"><a href="#下期预告" class="headerlink" title="下期预告"></a>下期预告</h2><p>下期准备把Spring Boot Actuator和Spring Boot Admin实现健康性能监测实战一下，下期再见。</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p74.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>SpringBoot实战记录5:快速构建自定义脚手架</title>
      <link>https://www.xiajunyi.com/pages/p73.html</link>
      <guid>https://www.xiajunyi.com/pages/p73.html</guid>
      <pubDate>Tue, 20 Oct 2020 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p73000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;每次新建SpringBoot项目包括Maven项目的子Module都要新建各种包和类，这些资源其实可以被抽出来，构建Maven脚手架，然后再创建新项目的时候，就可以利用脚手架自动生成这些资源了。下面记录实战操作。
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p73000.png" alt="img"><br></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>每次新建SpringBoot项目包括Maven项目的子Module都要新建各种包和类，这些资源其实可以被抽出来，构建Maven脚手架，然后再创建新项目的时候，就可以利用脚手架自动生成这些资源了。下面记录实战操作。<a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>Idea2019</li><li>Jdk1.8</li><li>Maven3.6.3</li></ul><h2 id="快速构建脚手架步骤："><a href="#快速构建脚手架步骤：" class="headerlink" title="快速构建脚手架步骤："></a>快速构建脚手架步骤：</h2><h3 id="创建SpringBoot项目"><a href="#创建SpringBoot项目" class="headerlink" title="创建SpringBoot项目"></a>创建SpringBoot项目</h3><p>这个不用多说，我一般采用新建Maven项目，然后引入自己所需的SpringBoot相关Maven依赖，也可以用Spring Intializr选择自己需要的依赖进行导入生成。</p><h3 id="构建自己需要的资源"><a href="#构建自己需要的资源" class="headerlink" title="构建自己需要的资源"></a>构建自己需要的资源</h3><p>按需新建包和类等资源即可，需要注意的是：如果是空包则不会被脚手架插件识别，所以可以在空包新建一个文件，例如README.md。<br><img src="/img/xjy/p73001.png" alt="img"></p><h3 id="引入脚手架构建插件"><a href="#引入脚手架构建插件" class="headerlink" title="引入脚手架构建插件"></a>引入脚手架构建插件</h3><p>在pom文件中引入如下Maven插件：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.Maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Maven-archetype-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="生成脚手架项目"><a href="#生成脚手架项目" class="headerlink" title="生成脚手架项目"></a>生成脚手架项目</h3><p>在项目目录下执行创建脚手架项目命令：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn archetype:create-from-project</span><br></pre></td></tr></table></figure></p><h3 id="安装到本地Maven仓库"><a href="#安装到本地Maven仓库" class="headerlink" title="安装到本地Maven仓库"></a>安装到本地Maven仓库</h3><p>进入target\generated-sources\archetype目录，然后执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install</span><br></pre></td></tr></table></figure></p><p>至此，脚手架项目已经被成功的安装到Maven仓库中。当然，如果需要自定义一些参数值关联到Maven项目，则可在安装前修改生成的脚手架项目，脚手架项目的规则可参考：<a href="https://juejin.im/post/6844903913032794126" target="_blank" rel="noopener">《撸一个Java脚手架，一统团队项目结构风格》</a></p><h2 id="使用脚手架"><a href="#使用脚手架" class="headerlink" title="使用脚手架"></a>使用脚手架</h2><p>下面以Idea为例,创建项目之前新增自定义的脚手架，以后就可以随便使用了，节省的时间可不少哦。<br><img src="/img/xjy/p73002.png" alt="img"></p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>还记得以前架构师的一句名言：“不想偷懒的程序员，成不了大牛”！<br>我们只有不断的思考，用新的方法提高效率，才能成长。我们都在路上，还未放弃，加油！</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p73.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>Docker实战-一个网页转pdf工具的docker镜像创建到发布</title>
      <link>https://www.xiajunyi.com/pages/p72.html</link>
      <guid>https://www.xiajunyi.com/pages/p72.html</guid>
      <pubDate>Mon, 21 Sep 2020 12:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p72000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近项目中需要实现将某url网页转换成pdf文件的功能。调研了多个插件和api，发现不是存在html或css兼容限制，就是js不支持等问题。靠谱一点的思路方案就是调用Chrome浏览器的打印pdf组件，这样就大大提高了渲染的兼容性，但是java直接调用安装好的浏览器不是很便捷。&lt;/p&gt;
&lt;p&gt;感谢同事在git上找到了一个基于springboot的现成项目：&lt;a href=&quot;https://github.com/tal-tech/h5-transfer-pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《tal-tech/h5-transfer-pdf》&lt;/a&gt;，它是调用nodejs模块实现的，可以将网页HTML渲染为PDF和各种图像格式的API工具，完美兼容HTML、CSS、JS，较好的排版支持，并支持生成多种版本的PDF。详情文档可&lt;a href=&quot;https://www.yuque.com/books/share/12029038-5b2d-47d4-8077-91d59d379ad0?#%20%E3%80%8AH5TransferPDF%E6%96%87%E6%A1%A3%E3%80%8B&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考这里&lt;/a&gt;。
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p72000.png" alt="img"><br></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近项目中需要实现将某url网页转换成pdf文件的功能。调研了多个插件和api，发现不是存在html或css兼容限制，就是js不支持等问题。靠谱一点的思路方案就是调用Chrome浏览器的打印pdf组件，这样就大大提高了渲染的兼容性，但是java直接调用安装好的浏览器不是很便捷。</p><p>感谢同事在git上找到了一个基于springboot的现成项目：<a href="https://github.com/tal-tech/h5-transfer-pdf" target="_blank" rel="noopener">《tal-tech/h5-transfer-pdf》</a>，它是调用nodejs模块实现的，可以将网页HTML渲染为PDF和各种图像格式的API工具，完美兼容HTML、CSS、JS，较好的排版支持，并支持生成多种版本的PDF。详情文档可<a href="https://www.yuque.com/books/share/12029038-5b2d-47d4-8077-91d59d379ad0?#%20%E3%80%8AH5TransferPDF%E6%96%87%E6%A1%A3%E3%80%8B" target="_blank" rel="noopener">参考这里</a>。<a id="more"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>考虑到以后的便捷发布，我准备把它做成一个docker项目。接下来就是，对Dockerfile不太熟的我，通过摸索试错，完成了基础镜像的创建，以及docker构建脚本的编写，最终实现了单独部署。经测试效果还不错，这里记录一下整个改造过程。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>docker</li><li>docker-compose</li><li>centos7</li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="一、构建自己的基础镜像"><a href="#一、构建自己的基础镜像" class="headerlink" title="一、构建自己的基础镜像"></a>一、构建自己的基础镜像</h3><p>项目中需要依赖java、node、同时还要支持中文，于是我要构建一个基础镜像，这里命名为xiajunyi/centos7-java8-node10去支持上述环境。</p><h4 id="1-下载一个镜像"><a href="#1-下载一个镜像" class="headerlink" title="1.下载一个镜像"></a>1.下载一个镜像</h4><p>在dockerhub上找了一个同时支持centos、jdk、node的镜像：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull reiniergs/centos7-jdk-node-browsers:latest</span><br></pre></td></tr></table></figure></p><h4 id="2-运行上述镜像"><a href="#2-运行上述镜像" class="headerlink" title="2.运行上述镜像"></a>2.运行上述镜像</h4><p>下面是docker-compose配置xjy-java.yml：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  javanode:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">reiniergs/centos7-jdk-node-browsers</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">xjy-java-node</span></span><br><span class="line"><span class="attr">    tty:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">xjynet</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  xjynet:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p>运行启动容器<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f xjy-java.yml up -d</span><br></pre></td></tr></table></figure></p><h4 id="3-安装nodejs模块"><a href="#3-安装nodejs模块" class="headerlink" title="3.安装nodejs模块"></a>3.安装nodejs模块</h4><p>将git上下载的static文件夹下的nodejs文件整个复制到容器中<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp static/ xjy-java-node:/script/</span><br></pre></td></tr></table></figure></p><p>接下来，进入容器中/script文件夹中，执行安装命令<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></p><h4 id="4-安装中文字体"><a href="#4-安装中文字体" class="headerlink" title="4.安装中文字体"></a>4.安装中文字体</h4><p>这个跟着网上<a href="https://www.ilanni.com/?p=11746" target="_blank" rel="noopener">参考文档</a>的步骤走就可以了，大体思路是，将windows系统中的中文字体复制到容器中，然后执行相关命令安装到linux中。</p><h4 id="5-生成自己的基础镜像"><a href="#5-生成自己的基础镜像" class="headerlink" title="5.生成自己的基础镜像"></a>5.生成自己的基础镜像</h4><p>完成上述安装后，我们的环境基本上搭建完成，可以把当前的容器构建成我的基础镜像了。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit -m 我的基础镜像 --author xiajunyi xjy-java-node xiajunyi/centos7-java8-node10:v1.0.0</span><br></pre></td></tr></table></figure></p><p>当然也可以推送到自己的dockerhub仓库中去：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push xiajunyi/centos7-java8-node10:v1.0.0</span><br></pre></td></tr></table></figure></p><h3 id="二、Dockerfile构建"><a href="#二、Dockerfile构建" class="headerlink" title="二、Dockerfile构建"></a>二、Dockerfile构建</h3><h4 id="1-下载源代码："><a href="#1-下载源代码：" class="headerlink" title="1.下载源代码："></a>1.下载源代码：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/xiajunyi/h5-transfer-pdf.git</span><br></pre></td></tr></table></figure><h4 id="2-修改application-properites配置"><a href="#2-修改application-properites配置" class="headerlink" title="2.修改application.properites配置"></a>2.修改application.properites配置</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server.port=8084</span><br><span class="line">pdf.process.wait-for-timeout=20000</span><br><span class="line">pdf.process.read-stream-timeout=20000</span><br><span class="line">pdf.process.script-path=/script/render-pdf.js</span><br><span class="line">pdf.process.node-path=/bin/node</span><br></pre></td></tr></table></figure><h4 id="3-编写Dockerfile"><a href="#3-编写Dockerfile" class="headerlink" title="3.编写Dockerfile"></a>3.编写Dockerfile</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">FROM xiajunyi/centos7-java8-node10:v1.0.0</span><br><span class="line"></span><br><span class="line">MAINTAINER xiajunyi</span><br><span class="line"></span><br><span class="line">RUN sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line">RUN sudo mkdir -p /pdftools</span><br><span class="line"></span><br><span class="line">WORKDIR /pdftools</span><br><span class="line"></span><br><span class="line">COPY /target/h5-transfer-pdf-1.0.0-lite.zip .</span><br><span class="line"></span><br><span class="line">RUN sudo unzip h5-transfer-pdf-1.0.0-lite.zip &amp;&amp; sudo mv h5-transfer-pdf-1.0.0/* . </span><br><span class="line"></span><br><span class="line">EXPOSE 8084</span><br><span class="line"></span><br><span class="line">CMD sudo java -Djava.security.egd=file:/dev/./urandom -jar boot/h5-transfer-pdf-1.0.0.jar</span><br></pre></td></tr></table></figure><h3 id="三、docker镜像生成及部署"><a href="#三、docker镜像生成及部署" class="headerlink" title="三、docker镜像生成及部署"></a>三、docker镜像生成及部署</h3><h4 id="1-编译项目"><a href="#1-编译项目" class="headerlink" title="1.编译项目"></a>1.编译项目</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package -DskipTests</span><br></pre></td></tr></table></figure><h4 id="2-生成docker镜像"><a href="#2-生成docker镜像" class="headerlink" title="2.生成docker镜像"></a>2.生成docker镜像</h4><p>有了Dockerfile文件以后，再修改java部分的代码只需执行新的构建命令即可：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t xiajunyi/pdftools:v1.0.0 .</span><br></pre></td></tr></table></figure></p><p>也可以将镜像推送到自己的dockerhub仓库中去：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push xiajunyi/pdftools:v1.0.0</span><br></pre></td></tr></table></figure></p><h4 id="3-部署运行容器"><a href="#3-部署运行容器" class="headerlink" title="3.部署运行容器"></a>3.部署运行容器</h4><p>docker-compose文件配置xjy-pdftools.yml如下：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  xjy-pdftools:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">xiajunyi/pdftools:v1.0.0</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">xjy-pdftools</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/mnt/docker/tmp:/pdftools/tmp</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">8084</span><span class="string">:8084</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">xjynet</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  xjynet:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p>运行容器：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f xjy-pdftools.yml up -d</span><br></pre></td></tr></table></figure></p><h3 id="四、测试效果"><a href="#四、测试效果" class="headerlink" title="四、测试效果"></a>四、测试效果</h3><p>下面是两个常用api，可以用来测试效果：</p><h4 id="1-转换返回pdf文件名"><a href="#1-转换返回pdf文件名" class="headerlink" title="1.转换返回pdf文件名"></a>1.转换返回pdf文件名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl --location --request POST &apos;http://al.xiajunyi.com:8084/rest/pdf/render&apos; \</span><br><span class="line">--header &apos;Content-Type: application/json&apos; \</span><br><span class="line">--data-raw &apos;&#123;</span><br><span class="line">    &quot;output&quot;: &quot;tmp/&quot;,</span><br><span class="line">    &quot;fileName&quot;: &quot;api&quot;,</span><br><span class="line">    &quot;url&quot;: &quot;https://www.xiajunyi.com&quot;,</span><br><span class="line">    &quot;outputType&quot;: &quot;PDF&quot;,</span><br><span class="line">    &quot;emulateMediaType&quot;:&quot;true&quot;</span><br><span class="line">&#125;&apos;</span><br></pre></td></tr></table></figure><h4 id="2-转换直接返回pdf文件流"><a href="#2-转换直接返回pdf文件流" class="headerlink" title="2.转换直接返回pdf文件流"></a>2.转换直接返回pdf文件流</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl --location --request GET &apos;http://al.xiajunyi.com:8084/rest/pdf/show&apos; \</span><br><span class="line">--form &apos;fileName=tmp&apos; \</span><br><span class="line">--form &apos;url=http://www.baidu.com&apos; \</span><br><span class="line">--form &apos;outputType=PDF&apos; \</span><br><span class="line">--form &apos;emulateMediaType=true&apos;</span><br></pre></td></tr></table></figure><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>好了，这次docker实战就到这里，如果需要该pdf转换功能的，也可以直接拉取我上传到dockerhub上的镜像<a href="https://hub.docker.com/repository/docker/xiajunyi/pdftools" target="_blank" rel="noopener">《xiajunyi/pdftools》</a>部署测试哦！</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p72.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>SpringBoot实战记录4:集成Nacos配置中心</title>
      <link>https://www.xiajunyi.com/pages/p71.html</link>
      <guid>https://www.xiajunyi.com/pages/p71.html</guid>
      <pubDate>Tue, 18 Aug 2020 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p71000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;除了consul，听说Nacos作为服务中心和配置中心也很不错，于是也动手实践了一下Nacos配置中心。
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p71000.png" alt="img"><br></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>除了consul，听说Nacos作为服务中心和配置中心也很不错，于是也动手实践了一下Nacos配置中心。<a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>idea</li><li>jdk1.8</li><li>centos7</li><li>docker-compose</li></ul><h2 id="Nacos的安装及使用"><a href="#Nacos的安装及使用" class="headerlink" title="Nacos的安装及使用"></a>Nacos的安装及使用</h2><h3 id="1-docker-compose配置"><a href="#1-docker-compose配置" class="headerlink" title="1. docker-compose配置"></a>1. docker-compose配置</h3><p>为了方便，还是利用docker进行部署和使用，如下是docker-compose配置文件<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"2"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  nacos:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">nacos/nacos-server:latest</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">xjy-nacos-mysql</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8848:8848"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"9555:9555"</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">PREFER_HOST_MODE=hostname</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">MODE=standalone</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">SPRING_DATASOURCE_PLATFORM=mysql</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">MYSQL_SERVICE_HOST=数据库hostname</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">MYSQL_SERVICE_DB_NAME=数据库名称</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">MYSQL_SERVICE_PORT=3306</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">MYSQL_SERVICE_USER=root</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">MYSQL_SERVICE_PASSWORD=root</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">xjynet</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  xjynet:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h3 id="2-创建初始表"><a href="#2-创建初始表" class="headerlink" title="2. 创建初始表"></a>2. 创建初始表</h3><p>Nacos可以将数据存在mysql数据库中，官方自带的例子里是自己的Mysql容器里已经建好了表，如果连接自己的数据库，就需要提前执行sql脚本来创建，之前找了好久，我的sql脚本来自于官网下载的server压缩包nacos-server-1.3.2.tar.gz\nacos\conf\nacos-mysql.sql文件。</p><h3 id="3-启动容器"><a href="#3-启动容器" class="headerlink" title="3. 启动容器"></a>3. 启动容器</h3><p>执行如下命令启动新配置的docker容器：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></p><h3 id="4-访问consul并加入项目参数"><a href="#4-访问consul并加入项目参数" class="headerlink" title="4. 访问consul并加入项目参数"></a>4. 访问consul并加入项目参数</h3><p>访问http://你的ip:8848/nacos进入到Nacos管理界面，在配置列表里新增自己项目的参数即可，界面如下：<img src="/img/xjy/p71001.png" alt="img"><br></p><h2 id="springboot配置"><a href="#springboot配置" class="headerlink" title="springboot配置"></a>springboot配置</h2><h3 id="1-引入pom依赖"><a href="#1-引入pom依赖" class="headerlink" title="1. 引入pom依赖"></a>1. 引入pom依赖</h3><p>pom文件中加入下面内容：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--consul配置中心--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nacos-config-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.2.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="2-配置nacos连接地址"><a href="#2-配置nacos连接地址" class="headerlink" title="2. 配置nacos连接地址"></a>2. 配置nacos连接地址</h3><p>applocatin.yml文件中加入如下配置:<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nacos:</span></span><br><span class="line"><span class="attr">  config:</span></span><br><span class="line"><span class="attr">    server-addr:</span> <span class="string">你的ip:8848</span></span><br><span class="line"><span class="attr">    group:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">    dataId:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">yaml</span></span><br><span class="line"><span class="attr">    auto-refresh:</span> <span class="literal">true</span> <span class="comment"># 是否启用动态刷新配置</span></span><br><span class="line"><span class="attr">    bootstrap:</span></span><br><span class="line"><span class="attr">      enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h3 id="3-运行"><a href="#3-运行" class="headerlink" title="3. 运行"></a>3. 运行</h3><p>运行时程序会连接到我们的Nacos服务器，结合Nacos中配置的其他参数，就可以成功启动自己的SpringBoot项目了。我们可以结合代码在Nacos中修改部分参数的值，测试一下我们的配置是否是实时生效的。</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p71.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>SpringBoot实战记录3:集成Consul配置中心</title>
      <link>https://www.xiajunyi.com/pages/p70.html</link>
      <guid>https://www.xiajunyi.com/pages/p70.html</guid>
      <pubDate>Fri, 14 Aug 2020 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p70000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;在当前的项目中体验了consul作为配置中心进行的配置动态更新，于是自己来实战一把
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p70000.png" alt="img"><br></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在当前的项目中体验了consul作为配置中心进行的配置动态更新，于是自己来实战一把<a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>idea</li><li>jdk1.8</li><li>centos7</li><li>docker-compose</li></ul><h2 id="Consul的安装及使用"><a href="#Consul的安装及使用" class="headerlink" title="Consul的安装及使用"></a>Consul的安装及使用</h2><h3 id="1-docker-compose配置"><a href="#1-docker-compose配置" class="headerlink" title="1. docker-compose配置"></a>1. docker-compose配置</h3><p>为了方便，还是利用docker进行部署和使用，同时为了节省资源 ，下面的集群模式其实只用了一个节点，如下是docker-compose配置文件<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span>      </span><br><span class="line">  <span class="comment"># consul server，对外暴露的ui接口为8500，可通过ui直接访问consulserver，并且配置在2台consul服务器的情况下集群才起作用</span></span><br><span class="line"><span class="attr">  consulserver:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">progrium/consul:latest</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">consulserver</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8300"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8400"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8500:8500"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"53"</span></span><br><span class="line"><span class="attr">    command:</span> <span class="bullet">-server</span> <span class="bullet">-ui-dir</span> <span class="string">/ui</span> <span class="bullet">-data-dir</span> <span class="string">/tmp/consul</span> <span class="bullet">--bootstrap-expect=1</span></span><br><span class="line"><span class="attr">    networks:</span> </span><br><span class="line"><span class="bullet">      -</span> <span class="string">xjynet</span></span><br><span class="line">      </span><br><span class="line">  <span class="comment"># consul server1在consul server服务起来后，加入集群中</span></span><br><span class="line"><span class="attr">  consulserver1:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">progrium/consul:latest</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">consulserver1</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"consulserver"</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8300"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8400"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8500"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"53"</span></span><br><span class="line"><span class="attr">    command:</span> <span class="bullet">-server</span> <span class="bullet">-data-dir</span> <span class="string">/tmp/consul</span> <span class="bullet">-join</span> <span class="string">consulserver</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  xjynet:</span></span><br><span class="line"><span class="attr">    external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h3 id="2-启动容器"><a href="#2-启动容器" class="headerlink" title="2. 启动容器"></a>2. 启动容器</h3><p>执行如下命令启动新配置的docker容器：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></p><h3 id="3-访问consul并加入项目参数"><a href="#3-访问consul并加入项目参数" class="headerlink" title="3. 访问consul并加入项目参数"></a>3. 访问consul并加入项目参数</h3><p>访问http://你的ip:8500进入到consul管理界面，在key/value栏目下新增自己项目的参数即可，界面如下：<img src="/img/xjy/p70001.png" alt="img"><br></p><h2 id="springboot配置"><a href="#springboot配置" class="headerlink" title="springboot配置"></a>springboot配置</h2><h3 id="1-引入pom依赖"><a href="#1-引入pom依赖" class="headerlink" title="1. 引入pom依赖"></a>1. 引入pom依赖</h3><p>pom文件中加入下面内容：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--consul配置中心--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="2-配置consul连接地址"><a href="#2-配置consul连接地址" class="headerlink" title="2. 配置consul连接地址"></a>2. 配置consul连接地址</h3><p>bootstrap.yml文件中加入如下配置:<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 配置中心</span></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    consul:</span></span><br><span class="line">      <span class="comment">#host: $&#123;ENV&#125;</span></span><br><span class="line"><span class="attr">      host:</span> <span class="string">xxx.xxx.com</span></span><br><span class="line"><span class="attr">      port:</span> <span class="number">8500</span></span><br><span class="line"><span class="attr">      config:</span></span><br><span class="line"><span class="attr">        enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">        format:</span> <span class="string">yaml</span></span><br><span class="line"><span class="attr">        prefix:</span> <span class="string">config</span></span><br><span class="line"><span class="attr">        default-context:</span> <span class="string">xxx</span></span><br><span class="line">        <span class="comment">#profile-separator: ','</span></span><br><span class="line"><span class="attr">        data-key:</span> <span class="string">data</span></span><br></pre></td></tr></table></figure></p><h3 id="3-运行"><a href="#3-运行" class="headerlink" title="3. 运行"></a>3. 运行</h3><p>运行时程序会连接到我们的consul服务器，结合consul中配置的其他参数，就可以成功启动自己的SpringBoot项目了。我们可以结合代码在consul中修改部分参数的值，测试一下我们的配置是否是实时生效的。</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p70.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>SpringBoot实战记录2:集成Mybatis-Plus</title>
      <link>https://www.xiajunyi.com/pages/p69.html</link>
      <guid>https://www.xiajunyi.com/pages/p69.html</guid>
      <pubDate>Thu, 13 Aug 2020 11:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p69000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;MyBatis-Plus技术带来的开发效率提高还是很可观的，所以花一些时间学习升级技术还是有必要的。这一篇进阶MyBatis，讲一下MP(MyBatis-Plus)的集成和MP代码生成器的使用。
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p69000.png" alt="img"><br></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>MyBatis-Plus技术带来的开发效率提高还是很可观的，所以花一些时间学习升级技术还是有必要的。这一篇进阶MyBatis，讲一下MP(MyBatis-Plus)的集成和MP代码生成器的使用。<a id="more"></a><br>这里的实战知识大多来自于中文官网：<a href="https://baomidou.com/guide/#%E7%89%B9%E6%80%A7" target="_blank" rel="noopener">《MyBatis-Plus<br>为简化开发而生》</a>，推荐前往深入学习。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>idea</li><li>jdk1.8</li></ul><h2 id="Mybatis-集成及使用"><a href="#Mybatis-集成及使用" class="headerlink" title="Mybatis-集成及使用"></a>Mybatis-集成及使用</h2><h3 id="1-引入pom依赖"><a href="#1-引入pom依赖" class="headerlink" title="1. 引入pom依赖"></a>1. 引入pom依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-定义映射xml文件的路径"><a href="#2-定义映射xml文件的路径" class="headerlink" title="2. 定义映射xml文件的路径"></a>2. 定义映射xml文件的路径</h3><p>application.yml中加入mapper的xml文件路径配置<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MyBatis Mapper所对应的XML文件位置</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line"><span class="attr">  mapper-locations:</span> <span class="attr">classpath:/com/xjy/world/mapper/*Mapper.xml</span></span><br></pre></td></tr></table></figure></p><h3 id="3-数据源配置"><a href="#3-数据源配置" class="headerlink" title="3. 数据源配置"></a>3. 数据源配置</h3><p>数据源可以结合springboot数据源在application.yml中配置<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:mysql://ip:3306/test?serverTimezone=UTC</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    password:</span> <span class="string">root</span></span><br></pre></td></tr></table></figure></p><h3 id="4-定义一个goods表"><a href="#4-定义一个goods表" class="headerlink" title="4. 定义一个goods表"></a>4. 定义一个goods表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`goods`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`goods`</span>  (</span><br><span class="line">  <span class="string">`goods_id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`goods_name`</span> <span class="built_in">varchar</span>(<span class="number">120</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`goods_id`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> <span class="string">`PK__goods__40BA22391B9317B3`</span>(<span class="string">`goods_id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_general_ci ROW_FORMAT = Dynamic;</span><br></pre></td></tr></table></figure><h3 id="5-定义一个实体Goods类"><a href="#5-定义一个实体Goods类" class="headerlink" title="5. 定义一个实体Goods类"></a>5. 定义一个实体Goods类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Goods</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer goodsId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String goodsName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-定义一个GoodsMapper接口"><a href="#6-定义一个GoodsMapper接口" class="headerlink" title="6. 定义一个GoodsMapper接口"></a>6. 定义一个GoodsMapper接口</h3><p>注意这里继承了BaseMapper<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GoodsMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">Goods</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="7-定义一个GoodsService实现类"><a href="#7-定义一个GoodsService实现类" class="headerlink" title="7. 定义一个GoodsService实现类"></a>7. 定义一个GoodsService实现类</h3><p>注意这里继承了ServiceImpl类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">GoodsMapper</span>, <span class="title">Goods</span>&gt; <span class="keyword">implements</span> <span class="title">GoodsService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Goods&gt; <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.list(<span class="keyword">new</span> QueryWrapper&lt;Goods&gt;().eq(<span class="string">"goods_id"</span>, <span class="number">39</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="8-调用查询"><a href="#8-调用查询" class="headerlink" title="8. 调用查询"></a>8. 调用查询</h3><p>在业务逻辑中可以分别通过MP提供的基类等多种方式调用，还支持例如Map形式的查询条件、Wrapper类组装查询条件、自定义查询sql等，详见官方介绍。下面是基类自带的简单示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MP自带(BaseMapper类的方法)</span></span><br><span class="line">Map&lt;String, Object&gt; queryMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">queryMap.put(<span class="string">"goods_id"</span>, <span class="number">39</span>);</span><br><span class="line">List&lt;Goods&gt; listGoods =  goodsMapper.selectByMap(queryMap);</span><br><span class="line"><span class="comment">// MP自带(ServiceImpl类的方法)查询</span></span><br><span class="line">List&lt;Goods&gt; listGoods2 = goodsService.list();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Mybatis代码生成器的配置及使用"><a href="#Mybatis代码生成器的配置及使用" class="headerlink" title="Mybatis代码生成器的配置及使用"></a>Mybatis代码生成器的配置及使用</h2><p>听说MyBatis-Plus代码生成器比MyBatis生成器更方便，那就实战一下</p><h3 id="1-引入pom依赖-1"><a href="#1-引入pom依赖-1" class="headerlink" title="1. 引入pom依赖"></a>1. 引入pom依赖</h3><p>pom文件中加入如下配置<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--代码生成器 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--模板引擎 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="2-引入模板文件"><a href="#2-引入模板文件" class="headerlink" title="2.引入模板文件"></a>2.引入模板文件</h3><p>模板文件的下载地址<a href="https://link.zhihu.com/?target=https%3A//github.com/baomidou/mybatis-plus/tree/3.0/mybatis-plus-generator/src/main/resources/templates" target="_blank" rel="noopener">在这里</a><br>将下载好的模板文件放入项目的resources/templates目录中</p><h3 id="3-编写生成器java类"><a href="#3-编写生成器java类" class="headerlink" title="3. 编写生成器java类"></a>3. 编写生成器java类</h3><p>新增代码生成器类，注意修改下面的包名及数据库连接等配置，代码修改自<a href="https://zhuanlan.zhihu.com/p/98541479" target="_blank" rel="noopener">知乎文章代码</a>:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* MyBatis-Plus代码生成器</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span>: xjy</span></span><br><span class="line"><span class="comment">* <span class="doctag">@createDate</span>: 2020/8/13 18:05</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusGenerator</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 控制台内容读取</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span>: xjy </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>: tip</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>: java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@exception</span>: </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span>: 2020/8/13 18:15</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">scanner</span><span class="params">(String tip)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        StringBuilder help = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        help.append(<span class="string">"请输入"</span> + tip + <span class="string">"："</span>);</span><br><span class="line">        System.out.println(help.toString());</span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNext()) &#123;</span><br><span class="line">            String ipt = scanner.next();</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isNotEmpty(ipt)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ipt;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MybatisPlusException(<span class="string">"请输入正确的"</span> + tip + <span class="string">"！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 代码生成器</span></span><br><span class="line">        AutoGenerator mpg = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 全局配置</span></span><br><span class="line">        GlobalConfig gc = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        <span class="keyword">final</span> String projectPath = System.getProperty(<span class="string">"user.dir"</span>);</span><br><span class="line">        gc.setOutputDir(projectPath + <span class="string">"/world-company/src/main/java"</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">"xjy"</span>);</span><br><span class="line">        gc.setOpen(<span class="keyword">false</span>);</span><br><span class="line">        gc.setIdType(IdType.AUTO);</span><br><span class="line">        <span class="comment">// gc.setSwagger2(true); 实体属性 Swagger2 注解</span></span><br><span class="line">        gc.setFileOverride(<span class="keyword">true</span>); <span class="comment">//设置是否覆盖原来的代码  最好设置为false  或者 另外配置路径</span></span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 数据源配置</span></span><br><span class="line">        DataSourceConfig dsc = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dsc.setUrl(<span class="string">"jdbc:mysql://ip:3306/test?useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8&amp;serverTimezone=UTC"</span>);</span><br><span class="line">        <span class="comment">// dsc.setSchemaName("public");</span></span><br><span class="line">        dsc.setDriverName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">"root"</span>);</span><br><span class="line"></span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 包配置</span></span><br><span class="line">        <span class="keyword">final</span> PackageConfig pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        <span class="comment">//pc.setModuleName(scanner("模块名"));</span></span><br><span class="line">        pc.setParent(<span class="string">"com.xjy.world.company"</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自定义配置</span></span><br><span class="line">        InjectionConfig cfg = <span class="keyword">new</span> InjectionConfig() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// to do nothing</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果模板引擎是 freemarker</span></span><br><span class="line">        String templatePath = <span class="string">"/templates/mapper.xml.ftl"</span>;</span><br><span class="line">        <span class="comment">// 如果模板引擎是 velocity</span></span><br><span class="line">        <span class="comment">// String templatePath = "/templates/mapper.xml.vm";</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自定义输出配置</span></span><br><span class="line">        List&lt;FileOutConfig&gt; focList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">// 自定义配置会被优先输出</span></span><br><span class="line">        focList.add(<span class="keyword">new</span> FileOutConfig(templatePath) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">outputFile</span><span class="params">(TableInfo tableInfo)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 自定义输出文件名 ， 如果你 Entity 设置了前后缀、此处注意 xml 的名称会跟着发生变化！！</span></span><br><span class="line">                <span class="keyword">return</span> projectPath + <span class="string">"/world-company/src/main/resources/mapper/"</span></span><br><span class="line">                        + tableInfo.getEntityName() + <span class="string">"Mapper"</span> + StringPool.DOT_XML;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        cfg.setFileCreate(new IFileCreate() &#123;</span></span><br><span class="line"><span class="comment">            @Override</span></span><br><span class="line"><span class="comment">            public boolean isCreate(ConfigBuilder configBuilder, FileType fileType, String filePath) &#123;</span></span><br><span class="line"><span class="comment">                // 判断自定义文件夹是否需要创建</span></span><br><span class="line"><span class="comment">                checkDir("调用默认方法创建的目录");</span></span><br><span class="line"><span class="comment">                return false;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        cfg.setFileOutConfigList(focList);</span><br><span class="line">        mpg.setCfg(cfg);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置模板</span></span><br><span class="line">        <span class="comment">//TemplateConfig templateConfig = new TemplateConfig();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置自定义输出模板</span></span><br><span class="line">        <span class="comment">//指定自定义模板路径，注意不要带上.ftl/.vm, 会根据使用的模板引擎自动识别</span></span><br><span class="line">        <span class="comment">// templateConfig.setEntity("templates/entity2.java");</span></span><br><span class="line">        <span class="comment">// templateConfig.setService();</span></span><br><span class="line">        <span class="comment">// templateConfig.setController();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//templateConfig.setXml("templates/mapper.java");</span></span><br><span class="line">        <span class="comment">//mpg.setTemplate(templateConfig);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 策略配置</span></span><br><span class="line"></span><br><span class="line">        StrategyConfig strategy = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        <span class="comment">// 表名生成策略(下划线转驼峰命名)</span></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">// 列名生成策略(下划线转驼峰命名)</span></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">// 自定义实体父类</span></span><br><span class="line">        <span class="comment">//strategy.setSuperEntityClass("com.baomidou.ant.common.BaseEntity");</span></span><br><span class="line">        <span class="comment">// 是否启动Lombok配置</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 是否启动REST风格配置</span></span><br><span class="line">        strategy.setRestControllerStyle(<span class="keyword">true</span>);</span><br><span class="line">        strategy.setInclude(scanner(<span class="string">"表名，多个英文逗号分割"</span>).split(<span class="string">","</span>));</span><br><span class="line">        <span class="comment">// 写于父类中的公共字段   父类没有id就注释掉，否则实体类不生成 id属性</span></span><br><span class="line">        <span class="comment">//strategy.setSuperEntityColumns("id");</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="keyword">true</span>);</span><br><span class="line">        strategy.setTablePrefix(pc.getModuleName() + <span class="string">"_"</span>);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line">        mpg.setTemplateEngine(<span class="keyword">new</span> FreemarkerTemplateEngine());</span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h3 id="4-调用生成器"><a href="#4-调用生成器" class="headerlink" title="4. 调用生成器"></a>4. 调用生成器</h3><p>直接run上述的main方法即可生成包括xml、Entity、Mapper、Service、Controller等文件。<br>当然上述方法需要修改代码，还不是最人性化。如果想把配置项都写到一个单独的配置文件中，可以参考一下<a href="https://segmentfault.com/a/1190000020910712" target="_blank" rel="noopener">这篇文章</a>就可以了。原理相同，不在赘述！</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p69.html#disqus_thread</comments>
    </item>
    
    <item>
      <title>SpringBoot实战记录1:集成Mybatis</title>
      <link>https://www.xiajunyi.com/pages/p68.html</link>
      <guid>https://www.xiajunyi.com/pages/p68.html</guid>
      <pubDate>Thu, 13 Aug 2020 10:58:55 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/img/xjy/p68000.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;这里记录springboot项目引入mybatis的流程及mybatis代码生成器的配置和使用&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/img/xjy/p68000.png" alt="img"><br></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>这里记录springboot项目引入mybatis的流程及mybatis代码生成器的配置和使用<br><a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>idea</li><li>jdk1.8</li></ul><h2 id="Mybatis集成及使用"><a href="#Mybatis集成及使用" class="headerlink" title="Mybatis集成及使用"></a>Mybatis集成及使用</h2><h3 id="1-引入pom依赖"><a href="#1-引入pom依赖" class="headerlink" title="1. 引入pom依赖"></a>1. 引入pom依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-定义映射xml文件的路径"><a href="#2-定义映射xml文件的路径" class="headerlink" title="2. 定义映射xml文件的路径"></a>2. 定义映射xml文件的路径</h3><p>application.yml中加入mapper的xml文件路径配置<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MyBatis Mapper所对应的XML文件位置</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line"><span class="attr">  mapper-locations:</span> <span class="attr">classpath:/com/xjy/world/mapper/*Mapper.xml</span></span><br></pre></td></tr></table></figure></p><h3 id="3-数据源配置"><a href="#3-数据源配置" class="headerlink" title="3. 数据源配置"></a>3. 数据源配置</h3><p>数据源可以结合springboot数据源在application.yml中配置<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:mysql://ip:3306/test?serverTimezone=UTC</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    password:</span> <span class="string">root</span></span><br></pre></td></tr></table></figure></p><h3 id="4-定义一个tab-user表"><a href="#4-定义一个tab-user表" class="headerlink" title="4. 定义一个tab_user表"></a>4. 定义一个tab_user表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`tab_user`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`tab_user`</span>  (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`lastModify`</span> datetime(<span class="number">0</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`createDate`</span> datetime(<span class="number">0</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`version`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`roles`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> = utf8 <span class="keyword">COLLATE</span> = utf8_general_ci ROW_FORMAT = <span class="keyword">COMPACT</span>;</span><br></pre></td></tr></table></figure><h3 id="5-定义一个实体User类"><a href="#5-定义一个实体User类" class="headerlink" title="5. 定义一个实体User类"></a>5. 定义一个实体User类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">BaseData</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String passWord;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String roles;</span><br></pre></td></tr></table></figure><h3 id="6-定义一个Mapper接口"><a href="#6-定义一个Mapper接口" class="headerlink" title="6. 定义一个Mapper接口"></a>6. 定义一个Mapper接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">User <span class="title">getUserByUserName</span><span class="params">(String userName)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-定义UserMapper-xml文件"><a href="#7-定义UserMapper-xml文件" class="headerlink" title="7. 定义UserMapper.xml文件"></a>7. 定义UserMapper.xml文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.xjy.world.dao.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getUserByUserName"</span> <span class="attr">parameterType</span>=<span class="string">"String"</span> <span class="attr">resultType</span>=<span class="string">"com.xjy.world.company.model.User"</span>&gt;</span></span><br><span class="line">        select * from tab_user where username=#&#123;userName&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-调用查询"><a href="#8-调用查询" class="headerlink" title="8. 调用查询"></a>8. 调用查询</h3><p>在Service实现类中调用即可<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">extends</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUserByUserName</span><span class="params">(String userName)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.getUserByUserName(userName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Mybatis代码生成器的配置及使用"><a href="#Mybatis代码生成器的配置及使用" class="headerlink" title="Mybatis代码生成器的配置及使用"></a>Mybatis代码生成器的配置及使用</h2><p>为了简化开发，可以使用Mybatis代码生成器生成xml、Mapper、实体类等，下面方法为maven插件方法</p><h3 id="1-引入mybatis-generator插件"><a href="#1-引入mybatis-generator插件" class="headerlink" title="1. 引入mybatis-generator插件"></a>1. 引入mybatis-generator插件</h3><p>pom文件中加入如下配置<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis-generator插件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="2-生成规则配置"><a href="#2-生成规则配置" class="headerlink" title="2.生成规则配置"></a>2.生成规则配置</h3><p>在项目目录下新建generatorConfig.xml，内容可根据如下注释修改：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE generatorConfiguration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--导入属性配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"mybatis-generate/application.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--指定特定数据库的jdbc驱动jar包的位置--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;classPathEntry location="$&#123;jdbc.driverLocation&#125;"/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"default"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- optional，旨在创建class时，对注释进行控制 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressDate"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressAllComments"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--jdbc的数据库连接 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span></span></span><br><span class="line"><span class="tag">                <span class="attr">driverClass</span>=<span class="string">"$&#123;spring.datasource.driver-class-name&#125;"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">connectionURL</span>=<span class="string">"$&#123;spring.datasource.url&#125;"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">userId</span>=<span class="string">"$&#123;spring.datasource.username&#125;"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">password</span>=<span class="string">"$&#123;spring.datasource.password&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"forceBigDecimals"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类</span></span><br><span class="line"><span class="comment">            targetPackage     指定生成的model生成所在的包名</span></span><br><span class="line"><span class="comment">            targetProject     指定在该项目下所在的路径</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"com.xjy.world.demo.entity"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 是否允许子包，即targetPackage.schemaName.tableName --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 是否对model添加 构造函数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"constructorBased"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 是否对类CHAR类型的列的数据进行trim操作 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"immutable"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"com.xjy.world.demo.mapper"</span></span></span><br><span class="line"><span class="tag">                         <span class="attr">targetProject</span>=<span class="string">"src/main/resources"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码</span></span><br><span class="line"><span class="comment">                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象</span></span><br><span class="line"><span class="comment">                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象</span></span><br><span class="line"><span class="comment">                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"com.xjy.world.demo.dao"</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"tab_user"</span> <span class="attr">domainObjectName</span>=<span class="string">"TabUser"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">enableCountByExample</span>=<span class="string">"false"</span> <span class="attr">enableUpdateByExample</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">enableDeleteByExample</span>=<span class="string">"false"</span> <span class="attr">enableSelectByExample</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">selectByExampleQueryId</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="3-新增Run-Configuration配置"><a href="#3-新增Run-Configuration配置" class="headerlink" title="3. 新增Run Configuration配置"></a>3. 新增Run Configuration配置</h3><p>新增maven类型的Run Configuration配置:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mybatis-generator:generate -e</span><br></pre></td></tr></table></figure></p><h3 id="4-调用生成器"><a href="#4-调用生成器" class="headerlink" title="4. 调用生成器"></a>4. 调用生成器</h3><p>在生成规则中配置好需要映射的表以后，运行上述maven类型的Run Configuration项，即可生成对应的文件。</p>]]></content:encoded>
      
      <comments>https://www.xiajunyi.com/pages/p68.html#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
